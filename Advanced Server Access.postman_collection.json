{
	"info": {
		"_postman_id": "f91736f1-5ae0-4a0a-949d-abed2ada2c58",
		"name": "Advanced Server Access",
		"description": "The ScaleFT API is a control plane API for operations in Okta Advanced Server Access (formerly ScaleFT)\n\nContact Support:\n Name: Okta Support\n Email: support@okta.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38383112",
		"_collection_link": "https://www.postman.com/okta-eng/okta-public-api-collections/collection/tq8vaze/advanced-server-access?action=share&source=collection_link&creator=38383112"
	},
	"item": [
		{
			"name": "AD Connections",
			"item": [
				{
					"name": "List all AD Connections",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&certificate_id=<string>&include_certificate_details=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "certificate_id",
									"value": "<string>",
									"description": "If defined, results only include AD Connections for the specified certificate ID"
								},
								{
									"key": "include_certificate_details",
									"value": "<boolean>",
									"description": "If 'true', results include any available certificate details for the returned AD Connections"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all AD Connections for your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&certificate_id=<string>&include_certificate_details=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "certificate_id",
											"value": "<string>"
										},
										{
											"key": "include_certificate_details",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"99006ae2-db7e-4735-b6bc-c726e6ae81c4\",\n      \"name\": \"test\",\n      \"gateway_id\": \"5a3af768-063f-4a12-a056-8ef24e555555\",\n      \"domain\": \"foo.example.com\",\n      \"domain_controllers\": [\n        \"1.2.3.4\",\n        \"bar.example.com\"\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an AD Connection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"gateway_id\": \"<regex>\",\n  \"domain\": \"<string>\",\n  \"domain_controllers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"service_account_password\": \"<string>\",\n  \"service_account_username\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Creates an AD Connection\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": \"foo.example.com\",\n  \"domain_controllers\": [\n    \"1.2.3.4\",\n    \"bar.example.com\"\n  ],\n  \"gateway_id\": \"5a3af768-063f-4a12-a056-8ef24e555555\",\n  \"name\": \"test\",\n  \"service_account_password\": \"p@$$w0rD\",\n  \"service_account_username\": \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"domain\": \"foo.example.com\",\n  \"domain_controllers\": [\n    \"1.2.3.4\",\n    \"bar.example.com\"\n  ],\n  \"gateway_id\": \"5a3af768-063f-4a12-a056-8ef24e555555\",\n  \"id\": \"99006ae2-db7e-4735-b6bc-c726e6ae81c4\",\n  \"name\": \"test\",\n  \"service_account_username\": \"admin\"\n}"
						}
					]
				},
				{
					"name": "Retrieve an AD Connection",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of the AD Connection"
								}
							]
						},
						"description": "Retrieves the properties of a specified AD Connection\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of the AD Connection"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"active_task_settings_id\": \"5a3af768-063f-4a12-a056-8ef24e123483\",\n  \"domain\": \"foo.example.com\",\n  \"domain_controllers\": [\n    \"1.2.3.4\",\n    \"bar.example.com\"\n  ],\n  \"gateway_id\": \"5a3af768-063f-4a12-a056-8ef24e555555\",\n  \"gateway_name\": \"gateway1\",\n  \"id\": \"99006ae2-db7e-4735-b6bc-c726e6ae81c4\",\n  \"name\": \"test\",\n  \"service_account_username\": \"admin\"\n}"
						}
					]
				},
				{
					"name": "Update an AD Connection",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"gateway_id\": \"<regex>\",\n  \"domain\": \"<string>\",\n  \"domain_controllers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"service_account_password\": \"<string>\",\n  \"service_account_username\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of the AD Connection"
								}
							]
						},
						"description": "Updates the properties of a specified AD Connection\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": \"foo.example.com\",\n  \"domain_controllers\": [\n    \"1.2.3.4\",\n    \"bar.example.com\"\n  ],\n  \"gateway_id\": \"5a3af768-063f-4a12-a056-8ef24e555555\",\n  \"name\": \"test\",\n  \"service_account_password\": \"p@$$w0rD\",\n  \"service_account_username\": \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of the AD Connection"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an AD Connection",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of the AD Connection"
								}
							]
						},
						"description": "Deletes a specified AD Connection\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of the AD Connection"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all AD Server Sync Jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								}
							]
						},
						"description": "Lists all server sync jobs for an Active Directory connection"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": {}\n}"
						}
					]
				},
				{
					"name": "Create a Server Sync Job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"access_address_attribute\": \"<string>\",\n  \"additional_attribute_mapping\": {\n    \"label\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"alt_names_attributes\": \"<string>\",\n  \"bastion_attribute\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"host_name_attribute\": \"<string>\",\n  \"id\": \"<regex>\",\n  \"is_active\": \"<boolean>\",\n  \"is_guid\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"os_attribute\": \"<string>\",\n  \"rule_assignments\": {\n    \"base_dn\": \"<string>\",\n    \"ldap_query_filter\": \"<string>\",\n    \"priority\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"start_hour_utc\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								}
							]
						},
						"description": "Creates a server sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_address_attribute\": \"access_address\",\n  \"additional_attribute_mapping\": {\n    \"label\": \"region\",\n    \"value\": \"server_region\"\n  },\n  \"alt_names_attributes\": \"alt_name\",\n  \"bastion_attribute\": \"bastion\",\n  \"frequency\": \"<string>\",\n  \"host_name_attribute\": \"host_name\",\n  \"id\": \"<regex>\",\n  \"is_active\": \"<boolean>\",\n  \"is_guid\": \"<boolean>\",\n  \"name\": \"Server Sync Job - 1\",\n  \"os_attribute\": \"os\",\n  \"rule_assignments\": {\n    \"base_dn\": \"<string>\",\n    \"ldap_query_filter\": \"<string>\",\n    \"priority\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_address_attribute\": \"access_address\",\n  \"additional_attribute_mapping\": {\n    \"label\": \"region\",\n    \"value\": \"server_region\"\n  },\n  \"alt_names_attributes\": \"alt_name\",\n  \"bastion_attribute\": \"bastion\",\n  \"frequency\": \"<string>\",\n  \"host_name_attribute\": \"host_name\",\n  \"id\": \"<regex>\",\n  \"is_active\": \"<boolean>\",\n  \"is_guid\": \"<boolean>\",\n  \"name\": \"Server Sync Job - 1\",\n  \"os_attribute\": \"os\",\n  \"recent_task_result\": {\n    \"ad_task_settings_id\": \"229a1621-a1g2-6366-q84d-da4vf2e76t2b\",\n    \"ad_task_settings_name\": \"Server Sync Job - 1\",\n    \"ad_test_request_id\": \"velit Ut\",\n    \"created_at\": \"2022-08-25T00:00:00Z\",\n    \"id\": \"84d3c3d4-3bda-23a1-9cb0-5eacfe66ae7b\",\n    \"rules_summary_status\": \"done\",\n    \"status\": {\n      \"summary\": \"qui esse\",\n      \"detailed_summary\": \"deserun\"\n    },\n    \"task_state\": \"done\",\n    \"updated_at\": \"2022-08-25T00:10:00Z\"\n  },\n  \"rule_assignments\": {\n    \"base_dn\": \"<string>\",\n    \"ldap_query_filter\": \"<string>\",\n    \"priority\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a Server Sync Job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings",
								":ad_task_settings_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing server sync job"
								}
							]
						},
						"description": "Retrieves a server sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings",
										":ad_task_settings_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing server sync job"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_address_attribute\": \"access_address\",\n  \"additional_attribute_mapping\": {\n    \"label\": \"region\",\n    \"value\": \"server_region\"\n  },\n  \"alt_names_attributes\": \"alt_name\",\n  \"bastion_attribute\": \"bastion\",\n  \"frequency\": \"<string>\",\n  \"host_name_attribute\": \"host_name\",\n  \"id\": \"<regex>\",\n  \"is_active\": \"<boolean>\",\n  \"is_guid\": \"<boolean>\",\n  \"name\": \"Server Sync Job - 1\",\n  \"os_attribute\": \"os\",\n  \"recent_task_result\": {\n    \"ad_task_settings_id\": \"229a1621-a1g2-6366-q84d-da4vf2e76t2b\",\n    \"ad_task_settings_name\": \"Server Sync Job - 1\",\n    \"ad_test_request_id\": \"velit Ut\",\n    \"created_at\": \"2022-08-25T00:00:00Z\",\n    \"id\": \"84d3c3d4-3bda-23a1-9cb0-5eacfe66ae7b\",\n    \"rules_summary_status\": \"done\",\n    \"status\": {\n      \"summary\": \"qui esse\",\n      \"detailed_summary\": \"deserun\"\n    },\n    \"task_state\": \"done\",\n    \"updated_at\": \"2022-08-25T00:10:00Z\"\n  },\n  \"rule_assignments\": {\n    \"base_dn\": \"<string>\",\n    \"ldap_query_filter\": \"<string>\",\n    \"priority\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\"\n}"
						}
					]
				},
				{
					"name": "Update a Server Sync Job",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"access_address_attribute\": \"<string>\",\n  \"additional_attribute_mapping\": {\n    \"label\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"alt_names_attributes\": \"<string>\",\n  \"bastion_attribute\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"host_name_attribute\": \"<string>\",\n  \"id\": \"<regex>\",\n  \"is_active\": \"<boolean>\",\n  \"is_guid\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"os_attribute\": \"<string>\",\n  \"rule_assignments\": {\n    \"base_dn\": \"<string>\",\n    \"ldap_query_filter\": \"<string>\",\n    \"priority\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"start_hour_utc\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings",
								":ad_task_settings_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing server sync job"
								}
							]
						},
						"description": "Updates a server sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_address_attribute\": \"access_address\",\n  \"additional_attribute_mapping\": {\n    \"label\": \"region\",\n    \"value\": \"server_region\"\n  },\n  \"alt_names_attributes\": \"alt_name\",\n  \"bastion_attribute\": \"bastion\",\n  \"frequency\": \"<string>\",\n  \"host_name_attribute\": \"host_name\",\n  \"id\": \"<regex>\",\n  \"is_active\": \"<boolean>\",\n  \"is_guid\": \"<boolean>\",\n  \"name\": \"Server Sync Job - 1\",\n  \"os_attribute\": \"os\",\n  \"rule_assignments\": {\n    \"base_dn\": \"<string>\",\n    \"ldap_query_filter\": \"<string>\",\n    \"priority\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings",
										":ad_task_settings_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing server sync job"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_address_attribute\": \"access_address\",\n  \"additional_attribute_mapping\": {\n    \"label\": \"region\",\n    \"value\": \"server_region\"\n  },\n  \"alt_names_attributes\": \"alt_name\",\n  \"bastion_attribute\": \"bastion\",\n  \"frequency\": \"<string>\",\n  \"host_name_attribute\": \"host_name\",\n  \"id\": \"<regex>\",\n  \"is_active\": \"<boolean>\",\n  \"is_guid\": \"<boolean>\",\n  \"name\": \"Server Sync Job - 1\",\n  \"os_attribute\": \"os\",\n  \"recent_task_result\": {\n    \"ad_task_settings_id\": \"229a1621-a1g2-6366-q84d-da4vf2e76t2b\",\n    \"ad_task_settings_name\": \"Server Sync Job - 1\",\n    \"ad_test_request_id\": \"velit Ut\",\n    \"created_at\": \"2022-08-25T00:00:00Z\",\n    \"id\": \"84d3c3d4-3bda-23a1-9cb0-5eacfe66ae7b\",\n    \"rules_summary_status\": \"done\",\n    \"status\": {\n      \"summary\": \"qui esse\",\n      \"detailed_summary\": \"deserun\"\n    },\n    \"task_state\": \"done\",\n    \"updated_at\": \"2022-08-25T00:10:00Z\"\n  },\n  \"rule_assignments\": {\n    \"base_dn\": \"<string>\",\n    \"ldap_query_filter\": \"<string>\",\n    \"priority\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\"\n}"
						}
					]
				},
				{
					"name": "Remove a Server Sync Job",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings",
								":ad_task_settings_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing server sync job"
								}
							]
						},
						"description": "Removes a server sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings",
										":ad_task_settings_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing server sync job"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Deactivate a Server Sync Job",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings",
								":ad_task_settings_id",
								"deactivate"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing server sync job"
								}
							]
						},
						"description": "Deactivates an Active Directory server sync job"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings",
										":ad_task_settings_id",
										"deactivate"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing server sync job"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a Server Sync Job Schedule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"frequency\": \"<string>\",\n  \"start_hour_utc\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/schedule",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings",
								":ad_task_settings_id",
								"schedule"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing server sync job"
								}
							]
						},
						"description": "Updates the schedule for a server sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"frequency\": \"<string>\",\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings",
										":ad_task_settings_id",
										"schedule"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing server sync job"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all AD Server Sync Job Results",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/task_results",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings",
								":ad_task_settings_id",
								"task_results"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing server sync job"
								}
							]
						},
						"description": "Lists all results for a specified server sync job"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/task_results",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings",
										":ad_task_settings_id",
										"task_results"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing server sync job"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": {}\n}"
						}
					]
				},
				{
					"name": "Retrieve a Server Sync Job Result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/task_results/:ad_task_result_id/detailed_summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings",
								":ad_task_settings_id",
								"task_results",
								":ad_task_result_id",
								"detailed_summary"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing server sync job"
								},
								{
									"key": "ad_task_result_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing server sync job run"
								}
							]
						},
						"description": "Retrieves the details summary of a specified server sync job"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/task_results/:ad_task_result_id/detailed_summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings",
										":ad_task_settings_id",
										"task_results",
										":ad_task_result_id",
										"detailed_summary"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing server sync job"
										},
										{
											"key": "ad_task_result_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing server sync job run"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ad_task_settings_id\": \"229a1621-a1g2-6366-q84d-da4vf2e76t2b\",\n  \"ad_task_settings_name\": \"Server Sync Job - 1\",\n  \"ad_test_request_id\": \"veniam minim\",\n  \"created_at\": \"2022-08-25T00:00:00Z\",\n  \"id\": \"559cb9af-43bf-41e7-9d51-e93e7f334ed9\",\n  \"rules_summary_status\": \"done\",\n  \"status\": {\n    \"summary\": \"amet\",\n    \"detailed_summary\": \"velit dolore occaecat ut\"\n  },\n  \"task_state\": \"done\",\n  \"updated_at\": \"2022-08-25T00:10:00Z\"\n}"
						}
					]
				},
				{
					"name": "Create a Server Sync Test Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/test_request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"task_settings",
								":ad_task_settings_id",
								"test_request"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing server sync job"
								}
							]
						},
						"description": "Creates a test request for the specified server sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/task_settings/:ad_task_settings_id/test_request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"task_settings",
										":ad_task_settings_id",
										"test_request"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing server sync job"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ad_task_settings_id\": \"229a1621-a1g2-6366-q84d-da4vf2e76t2b\",\n  \"ad_task_settings_name\": \"Server Sync Job - 1\",\n  \"ad_test_request_id\": \"veniam minim\",\n  \"created_at\": \"2022-08-25T00:00:00Z\",\n  \"id\": \"559cb9af-43bf-41e7-9d51-e93e7f334ed9\",\n  \"rules_summary_status\": \"done\",\n  \"status\": {\n    \"summary\": \"amet\",\n    \"detailed_summary\": \"velit dolore occaecat ut\"\n  },\n  \"task_state\": \"done\",\n  \"updated_at\": \"2022-08-25T00:10:00Z\"\n}"
						}
					]
				},
				{
					"name": "List all AD User Sync Jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								}
							]
						},
						"description": "Lists all user sync jobs for an Active Directory connection"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": {}\n}"
						}
					]
				},
				{
					"name": "Create a User Sync Job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"base_dn\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"LDAP_query_filter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"SID_Field\": \"<string>\",\n  \"start_hour_utc\": \"<string>\",\n  \"UPN_Field\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								}
							]
						},
						"description": "Creates a user sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base_dn\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"LDAP_query_filter\": \"<string>\",\n  \"name\": \"User Sync Job - 1\",\n  \"SID_Field\": \"objectsid\",\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\",\n  \"UPN_Field\": \"userprincipalname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"base_dn\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"id\": \"f6c63802-e4bb-5bfe-8afa-4aca3ea43dae\",\n  \"is_active\": \"<boolean>\",\n  \"LDAP_query_filter\": \"<string>\",\n  \"name\": \"User Sync Job - 1\",\n  \"recent_task_result\": {\n    \"ad_user_sync_task_settings_id\": \"abd615fd-6f9e-3a62-8a22-ec0581bbca39\",\n    \"ad_user_sync_task_settings_name\": \"User Sync Job - 1\",\n    \"ad_user_sync_test_request_id\": \"nulla exercitation quis fugiat\",\n    \"created_at\": \"2022-08-25T00:00:00Z\",\n    \"id\": \"a862b0a9-f763-597e-8abe-e59fb40e4ca2\",\n    \"status\": {\n      \"summary\": \"magna esse qui dolor\",\n      \"detailed_summary\": \"labore ut\"\n    },\n    \"task_state\": \"done\",\n    \"updated_at\": \"2022-08-25T00:10:00Z\"\n  },\n  \"SID_Field\": \"objectsid\",\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\",\n  \"UPN_Field\": \"userprincipalname\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a User Sync Job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings",
								":ad_user_sync_task_settings_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_user_sync_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing user sync job"
								}
							]
						},
						"description": "Retrieves a user sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings",
										":ad_user_sync_task_settings_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_user_sync_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing user sync job"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"base_dn\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"id\": \"f6c63802-e4bb-5bfe-8afa-4aca3ea43dae\",\n  \"is_active\": \"<boolean>\",\n  \"LDAP_query_filter\": \"<string>\",\n  \"name\": \"User Sync Job - 1\",\n  \"recent_task_result\": {\n    \"ad_user_sync_task_settings_id\": \"abd615fd-6f9e-3a62-8a22-ec0581bbca39\",\n    \"ad_user_sync_task_settings_name\": \"User Sync Job - 1\",\n    \"ad_user_sync_test_request_id\": \"nulla exercitation quis fugiat\",\n    \"created_at\": \"2022-08-25T00:00:00Z\",\n    \"id\": \"a862b0a9-f763-597e-8abe-e59fb40e4ca2\",\n    \"status\": {\n      \"summary\": \"magna esse qui dolor\",\n      \"detailed_summary\": \"labore ut\"\n    },\n    \"task_state\": \"done\",\n    \"updated_at\": \"2022-08-25T00:10:00Z\"\n  },\n  \"SID_Field\": \"objectsid\",\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\",\n  \"UPN_Field\": \"userprincipalname\"\n}"
						}
					]
				},
				{
					"name": "Update a User Sync Job",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"base_dn\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"LDAP_query_filter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"SID_Field\": \"<string>\",\n  \"start_hour_utc\": \"<string>\",\n  \"UPN_Field\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings",
								":ad_user_sync_task_settings_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_user_sync_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing user sync job"
								}
							]
						},
						"description": "Updates a user sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base_dn\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"LDAP_query_filter\": \"<string>\",\n  \"name\": \"User Sync Job - 1\",\n  \"SID_Field\": \"objectsid\",\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\",\n  \"UPN_Field\": \"userprincipalname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings",
										":ad_user_sync_task_settings_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_user_sync_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing user sync job"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"base_dn\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"id\": \"f6c63802-e4bb-5bfe-8afa-4aca3ea43dae\",\n  \"is_active\": \"<boolean>\",\n  \"LDAP_query_filter\": \"<string>\",\n  \"name\": \"User Sync Job - 1\",\n  \"recent_task_result\": {\n    \"ad_user_sync_task_settings_id\": \"abd615fd-6f9e-3a62-8a22-ec0581bbca39\",\n    \"ad_user_sync_task_settings_name\": \"User Sync Job - 1\",\n    \"ad_user_sync_test_request_id\": \"nulla exercitation quis fugiat\",\n    \"created_at\": \"2022-08-25T00:00:00Z\",\n    \"id\": \"a862b0a9-f763-597e-8abe-e59fb40e4ca2\",\n    \"status\": {\n      \"summary\": \"magna esse qui dolor\",\n      \"detailed_summary\": \"labore ut\"\n    },\n    \"task_state\": \"done\",\n    \"updated_at\": \"2022-08-25T00:10:00Z\"\n  },\n  \"SID_Field\": \"objectsid\",\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\",\n  \"UPN_Field\": \"userprincipalname\"\n}"
						}
					]
				},
				{
					"name": "Remove a User Sync Job",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings",
								":ad_user_sync_task_settings_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_user_sync_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing user sync job"
								}
							]
						},
						"description": "Removes a user sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings",
										":ad_user_sync_task_settings_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_user_sync_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing user sync job"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a User Sync Job Schedule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"base_dn\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"LDAP_query_filter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"SID_Field\": \"<string>\",\n  \"start_hour_utc\": \"<string>\",\n  \"UPN_Field\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/schedule",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings",
								":ad_user_sync_task_settings_id",
								"schedule"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_user_sync_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing user sync job"
								}
							]
						},
						"description": "Updates the schedule for a user sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base_dn\": \"<string>\",\n  \"frequency\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"LDAP_query_filter\": \"<string>\",\n  \"name\": \"User Sync Job - 1\",\n  \"SID_Field\": \"objectsid\",\n  \"start_hour_utc\": \"2022-08-24T14:15:22Z\",\n  \"UPN_Field\": \"userprincipalname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings",
										":ad_user_sync_task_settings_id",
										"schedule"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_user_sync_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing user sync job"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a User Sync Job State",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"is_active\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings",
								":ad_user_sync_task_settings_id",
								"state"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_user_sync_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing user sync job"
								}
							]
						},
						"description": "Updates the state of a user sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"is_active\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings",
										":ad_user_sync_task_settings_id",
										"state"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_user_sync_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing user sync job"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a User Sync Test Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/test_request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings",
								":ad_user_sync_task_settings_id",
								"test_request"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_user_sync_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing user sync job"
								}
							]
						},
						"description": "Creates a test request for the specified user sync job for an Active Directory connection"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/test_request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings",
										":ad_user_sync_task_settings_id",
										"test_request"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_user_sync_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing user sync job"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ad_user_sync_task_settings_id\": \"8b502118-a499-4aeb-88d7-3e30f7469a7d\",\n  \"ad_user_sync_task_settings_name\": \"User Sync Job - 1\",\n  \"ad_user_sync_test_request_id\": \"dolore dolor\",\n  \"created_at\": \"2022-08-25T00:00:00Z\",\n  \"id\": \"c263c3ec-14dc-1532-9e5b-75d4aabcd013\",\n  \"status\": {\n    \"summary\": \"deserunt do in non ut\",\n    \"detailed_summary\": \"in ex nulla Ut dolor\"\n  },\n  \"task_state\": \"done\",\n  \"updated_at\": \"2022-08-25T00:10:00Z\"\n}"
						}
					]
				},
				{
					"name": "List all AD User Sync Job Results",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/user_sync_task_results",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings",
								":ad_user_sync_task_settings_id",
								"user_sync_task_results"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_user_sync_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing user sync job"
								}
							]
						},
						"description": "Lists all results for a specified user sync job"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/user_sync_task_results",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings",
										":ad_user_sync_task_settings_id",
										"user_sync_task_results"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_user_sync_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing user sync job"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": {}\n}"
						}
					]
				},
				{
					"name": "Retrieve a User Sync Job Result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/user_sync_task_results/:ad_user_sync_task_result_id/detailed_summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"integrations",
								"ad_connections",
								":ad_connection_id",
								"user_sync_task_settings",
								":ad_user_sync_task_settings_id",
								"user_sync_task_results",
								":ad_user_sync_task_result_id",
								"detailed_summary"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "ad_connection_id",
									"value": "<string>",
									"description": "(Required) The UUID of an AD connection"
								},
								{
									"key": "ad_user_sync_task_settings_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing user sync job"
								},
								{
									"key": "ad_user_sync_task_result_id",
									"value": "<string>",
									"description": "(Required) The UUID of an existing user sync job run"
								}
							]
						},
						"description": "Retrieves the details summary of a specified user sync job"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/integrations/ad_connections/:ad_connection_id/user_sync_task_settings/:ad_user_sync_task_settings_id/user_sync_task_results/:ad_user_sync_task_result_id/detailed_summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"integrations",
										"ad_connections",
										":ad_connection_id",
										"user_sync_task_settings",
										":ad_user_sync_task_settings_id",
										"user_sync_task_results",
										":ad_user_sync_task_result_id",
										"detailed_summary"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "ad_connection_id",
											"value": "<string>",
											"description": "(Required) The UUID of an AD connection"
										},
										{
											"key": "ad_user_sync_task_settings_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing user sync job"
										},
										{
											"key": "ad_user_sync_task_result_id",
											"value": "<string>",
											"description": "(Required) The UUID of an existing user sync job run"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ad_user_sync_task_settings_id\": \"8b502118-a499-4aeb-88d7-3e30f7469a7d\",\n  \"ad_user_sync_task_settings_name\": \"User Sync Job - 1\",\n  \"ad_user_sync_test_request_id\": \"dolore dolor\",\n  \"created_at\": \"2022-08-25T00:00:00Z\",\n  \"id\": \"c263c3ec-14dc-1532-9e5b-75d4aabcd013\",\n  \"status\": {\n    \"summary\": \"deserunt do in non ut\",\n    \"detailed_summary\": \"in ex nulla Ut dolor\"\n  },\n  \"task_state\": \"done\",\n  \"updated_at\": \"2022-08-25T00:10:00Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Attributes",
			"item": [
				{
					"name": "List all Attributes for a Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&conflicting=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"attributes"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "conflicting",
									"value": "<boolean>",
									"description": "If true, results only include attributes that conflict with other Group attributes on your Team"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Lists all Attributes for a specified Group\n\nThis endpoint requires one of the following roles: `access_admin`, `access_user`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&conflicting=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"attributes"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "conflicting",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"36844d7c-f311-4a42-866c-f32a5a41e213\",\n      \"attribute_name\": \"unix_group_name\",\n      \"attribute_value\": \"group_old\",\n      \"managed\": false\n    },\n    {\n      \"id\": \"8eb50e3f-ef90-4215-b358-9318b35867de\",\n      \"attribute_name\": \"windows_group_name\",\n      \"attribute_value\": \"group_new\",\n      \"managed\": false\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Group Attribute",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes/:attribute_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"attributes",
								":attribute_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								},
								{
									"key": "attribute_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Attribute"
								}
							]
						},
						"description": "Retrieves an Attribute for a Group\n\nThis endpoint requires one of the following roles: `access_admin`, `access_user`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes/:attribute_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"attributes",
										":attribute_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										},
										{
											"key": "attribute_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Attribute"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attribute_name\": \"unix_group_name\",\n  \"attribute_value\": \"group_old\",\n  \"id\": \"36844d7c-f311-4a42-866c-f32a5a41e213\",\n  \"managed\": false\n}"
						}
					]
				},
				{
					"name": "Update a Group Attribute",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attribute_name\": \"<string>\",\n  \"attribute_value\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes/:attribute_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"attributes",
								":attribute_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								},
								{
									"key": "attribute_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Attribute"
								}
							]
						},
						"description": "Updates an Attribute for a Group\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attribute_name\": \"unix_group_name\",\n  \"attribute_value\": \"new_name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes/:attribute_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"attributes",
										":attribute_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										},
										{
											"key": "attribute_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Attribute"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Attributes for a User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&conflicting=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name",
								"attributes"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "conflicting",
									"value": "<boolean>",
									"description": "If true, results only include attributes that conflict with other User attributes on your Team"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Lists all Attributes for a specified user\n\nThis endpoint requires one of the following roles: `access_admin`, `access_user`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&conflicting=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name",
										"attributes"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "conflicting",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"11faefa1-6b59-4a52-9492-43195cd07385\",\n      \"attribute_name\": \"unix_user_name\",\n      \"attribute_value\": \"augusta_ada_king\",\n      \"managed\": true\n    },\n    {\n      \"id\": \"11faefa1-6b59-4a52-9492-43195cd07385\",\n      \"attribute_name\": \"unix_uid\",\n      \"attribute_value\": 1210,\n      \"managed\": true\n    },\n    {\n      \"id\": \"b06dfc59-ae9c-4243-b583-96d09988fd84\",\n      \"attribute_name\": \"unix_gid\",\n      \"attribute_value\": 1210,\n      \"managed\": true\n    },\n    {\n      \"id\": \"ff2c0f25-b73d-4720-8aeb-b6c39a68a204\",\n      \"attribute_name\": \"windows_user_name\",\n      \"attribute_value\": \"augusta_ada_king\",\n      \"managed\": true\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a User Attribute",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes/:attribute_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name",
								"attributes",
								":attribute_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								},
								{
									"key": "attribute_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Attribute"
								}
							]
						},
						"description": "Retrieves an Attribute for a User\n\nThis endpoint requires one of the following roles: `access_admin`, `access_user`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes/:attribute_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name",
										"attributes",
										":attribute_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										},
										{
											"key": "attribute_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Attribute"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attribute_name\": \"unix_user_name\",\n  \"attribute_value\": \"augusta_ada_king\",\n  \"id\": \"11faefa1-6b59-4a52-9492-43195cd07385\",\n  \"managed\": true\n}"
						}
					]
				},
				{
					"name": "Update a User Attribute",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attribute_name\": \"<string>\",\n  \"attribute_value\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes/:attribute_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name",
								"attributes",
								":attribute_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								},
								{
									"key": "attribute_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Attribute"
								}
							]
						},
						"description": "Updates an Attribute for a User\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attribute_name\": \"unix_user_name\",\n  \"attribute_value\": \"ada_lovelace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes/:attribute_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name",
										"attributes",
										":attribute_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										},
										{
											"key": "attribute_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Attribute"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Audits",
			"item": [
				{
					"name": "List all Audit Events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/auditsV2?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"auditsV2"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all Audit events for your Team. This operation returns up to 1000 events from the past 90 days.\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/auditsV2?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"auditsV2"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": {\n    \"id\": \"UD5pqjIhjKVQPmmqMiGMpQ==\",\n    \"timestamp\": \"2023-06-28T21:59:57.272435511Z\",\n    \"details\": {\n      \"actor\": \"FWUysQmguH4ns9NT1Uszl5j2a1t9SK2lYNACeu03uBs=\",\n      \"client\": \"WvajuG7IeAjPYPdzN0zJTSmujqXLpYd90s4haNXLzRA=\",\n      \"session_type\": \"authenticated_client\",\n      \"target_server\": \"\",\n      \"team_id\": \"\",\n      \"team_name\": \"william-faulkner\",\n      \"trace_id\": \"YqabgEzI\",\n      \"type\": \"auth_token.issue\",\n      \"via\": null\n    }\n  },\n  \"related_objects\": {\n    \"FWUysQmguH4ns9NT1Uszl5j2a1t9SK2lYNACeu03uBs=\": {\n      \"type\": \"user\",\n      \"object\": {\n        \"deleted_at\": null,\n        \"details\": {\n          \"email\": \"jason.compson@example.com\",\n          \"first_name\": \"Jason\",\n          \"full_name\": \"Jason Compson IV\",\n          \"last_name\": \"Compson\"\n        },\n        \"id\": \"e4c22cba-f8ec-4beb-98f4-b1a03725b204\",\n        \"name\": \"Jason.Compson.IV\",\n        \"status\": \"ACTIVE\",\n        \"team_name\": \"\",\n        \"user_type\": \"human\"\n      }\n    },\n    \"WvajuG7IeAjPYPdzN0zJTSmujqXLpYd90s4haNXLzRA=\": {\n      \"type\": \"client\",\n      \"object\": {\n        \"deleted_at\": null,\n        \"description\": \"Personal laptop\",\n        \"encrypted\": true,\n        \"hostname\": \"Absalom\",\n        \"id\": \"65d9e9d0-b0e5-48d9-aea6-420b9da6d1a3\",\n        \"os\": \"macOS 10.14.6\",\n        \"state\": \"ACTIVE\",\n        \"user_name\": \"Jason.Compson.IV\"\n      }\n    }\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Clients",
			"item": [
				{
					"name": "List all Clients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/clients?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&all=<boolean>&state=<string>&username=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"clients"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "all",
									"value": "<boolean>",
									"description": "If 'true', returns all Clients enrolled in your Team"
								},
								{
									"key": "state",
									"value": "<string>",
									"description": "If defined, results only include Clients with the specified status. Possible values: 'ACTIVE', 'PENDING', or 'DELETED'."
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "If defined, results include Clients assigned to the specified User. If an empty string is defined, the results include all unassigned Clients."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Returns a list of Clients for your Team. By default, this only returns Clients associated with the requesting User. Use query parameters to adjust the list of returned Clients.\n\nThis endpoint requires one of the following roles: `reporting_user`, `access_user`, or `access_admin`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/clients?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&all=<boolean>&state=<string>&username=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"clients"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "all",
											"value": "<boolean>"
										},
										{
											"key": "state",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"9c199afe-0ca5-427a-baac-c4341707d82b\",\n      \"user_name\": \"Jason.Compson.IV\",\n      \"description\": \"Work laptop\",\n      \"hostname\": \"LightInAugust\",\n      \"os\": \"macOS 10.14.6\",\n      \"encrypted\": true,\n      \"deleted_at\": null,\n      \"state\": \"PENDING\"\n    },\n    {\n      \"id\": \"5e9d8179-2fca-4905-8405-3cd3e0c5280e\",\n      \"user_name\": \"Jason.Compson.IV\",\n      \"description\": \"Personal laptop\",\n      \"hostname\": \"Absalom\",\n      \"os\": \"macOS 10.14.6\",\n      \"encrypted\": true,\n      \"deleted_at\": null,\n      \"state\": \"ACTIVE\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Client",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"clients",
								":client_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Client"
								}
							]
						},
						"description": "Retrieves the properties of a specified Client\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Client"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_at\": null,\n  \"description\": \"Work laptop\",\n  \"encrypted\": true,\n  \"hostname\": \"LightInAugust\",\n  \"id\": \"9c199afe-0ca5-427a-baac-c4341707d82b\",\n  \"os\": \"macOS 10.14.6\",\n  \"state\": \"PENDING\",\n  \"user_name\": \"Jason.Compson.IV\"\n}"
						}
					]
				},
				{
					"name": "Update a Client",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"state\": \"<string>\",\n  \"user_name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"clients",
								":client_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Client"
								}
							]
						},
						"description": "Updates the state or assigned user for a specified Client. This is required for some enrollment policies. See [Silently enroll the Client](https://help.okta.com/okta_help.htm?type=asa&id=ext-asa-enroll-sft-silent).\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"state\": \"ACTIVE\",\n  \"user_name\": \"Jason.Compson.IV\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Client"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Revoke access to a Client",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"clients",
								":client_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Client"
								}
							]
						},
						"description": "Revokes access to a specified Client from your Team\n\nThis endpoint requires one of the following roles: `access_admin`, `authenticated_client`, or `access_user`."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Client"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Entitlements",
			"item": [
				{
					"name": "List all sudo Entitlements",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all sudo Entitlements for your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"226a1963-a1c8-4316-bb4d-da48f2e7652a\",\n      \"created_at\": \"2018-04-07T00:00:00Z\",\n      \"updated_at\": \"2018-04-07T00:00:00Z\",\n      \"name\": \"name\",\n      \"description\": \"desc\",\n      \"commands\": null,\n      \"structured_commands\": [\n        {\n          \"command_type\": \"executable\",\n          \"command\": \"/bin/ls\",\n          \"args_type\": \"none\",\n          \"args\": null,\n          \"rendered_command\": \"\"\n        },\n        {\n          \"command_type\": \"directory\",\n          \"command\": \"/bin/\",\n          \"args_type\": null,\n          \"args\": null,\n          \"rendered_command\": \"\"\n        }\n      ],\n      \"opt_run_as\": \"\",\n      \"opt_no_passwd\": true,\n      \"opt_no_exec\": false,\n      \"opt_set_env\": false,\n      \"add_env\": [],\n      \"sub_env\": []\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a sudo Entitlement",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<regex>\",\n  \"add_env\": [\n    \"<regex>\",\n    \"<regex>\"\n  ],\n  \"description\": \"<string>\",\n  \"opt_no_exec\": \"<boolean>\",\n  \"opt_no_passwd\": \"<boolean>\",\n  \"opt_run_as\": \"<regex>\",\n  \"opt_set_env\": \"<boolean>\",\n  \"structured_commands\": [\n    {\n      \"args\": \"<regex>\",\n      \"args_type\": \"<regex>\",\n      \"command\": \"<regex>\",\n      \"command_type\": \"<string>\"\n    },\n    {\n      \"args\": \"<regex>\",\n      \"args_type\": \"<regex>\",\n      \"command\": \"<regex>\",\n      \"command_type\": \"<string>\"\n    }\n  ],\n  \"sub_env\": [\n    \"<regex>\",\n    \"<regex>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Creates a sudo Entitlement that allows a Group to run specific commands as sudo\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"add_env\": [],\n  \"commands\": null,\n  \"created_at\": \"0001-01-01T00:00:00Z\",\n  \"description\": \"desc\",\n  \"id\": \"226a1963-a1c8-4316-bb4d-da48f2e7652a\",\n  \"name\": \"name\",\n  \"opt_no_exec\": false,\n  \"opt_no_passwd\": true,\n  \"opt_run_as\": \"\",\n  \"opt_set_env\": false,\n  \"structured_commands\": [\n    {\n      \"args\": null,\n      \"args_type\": \"none\",\n      \"command\": \"/bin/ls\",\n      \"command_type\": \"executable\",\n      \"rendered_command\": \"\"\n    },\n    {\n      \"args\": null,\n      \"args_type\": null,\n      \"command\": \"/bin/\",\n      \"command_type\": \"directory\",\n      \"rendered_command\": \"\"\n    }\n  ],\n  \"sub_env\": [],\n  \"updated_at\": \"0001-01-01T00:00:00Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"add_env\": [],\n  \"commands\": null,\n  \"created_at\": \"2018-04-07T00:00:00Z\",\n  \"description\": \"desc\",\n  \"id\": \"226a1963-a1c8-4316-bb4d-da48f2e7652a\",\n  \"name\": \"name\",\n  \"opt_no_exec\": false,\n  \"opt_no_passwd\": true,\n  \"opt_run_as\": \"\",\n  \"opt_set_env\": false,\n  \"structured_commands\": [\n    {\n      \"args\": null,\n      \"args_type\": \"none\",\n      \"command\": \"/bin/ls\",\n      \"command_type\": \"executable\",\n      \"rendered_command\": \"\"\n    },\n    {\n      \"args\": null,\n      \"args_type\": null,\n      \"command\": \"/bin/\",\n      \"command_type\": \"directory\",\n      \"rendered_command\": \"\"\n    }\n  ],\n  \"sub_env\": [],\n  \"updated_at\": \"2018-04-07T00:00:00Z\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a sudo Entitlement",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo",
								":sudo_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "sudo_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Sudo Entitlement"
								}
							]
						},
						"description": "Retrieves the specified sudo Entitlement\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo",
										":sudo_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "sudo_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Sudo Entitlement"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"add_env\": [],\n  \"commands\": null,\n  \"created_at\": \"2018-04-07T00:00:00Z\",\n  \"description\": \"desc\",\n  \"id\": \"226a1963-a1c8-4316-bb4d-da48f2e7652a\",\n  \"name\": \"name\",\n  \"opt_no_exec\": false,\n  \"opt_no_passwd\": true,\n  \"opt_run_as\": \"\",\n  \"opt_set_env\": false,\n  \"structured_commands\": [\n    {\n      \"args\": null,\n      \"args_type\": \"none\",\n      \"command\": \"/bin/ls\",\n      \"command_type\": \"executable\",\n      \"rendered_command\": \"\"\n    },\n    {\n      \"args\": null,\n      \"args_type\": null,\n      \"command\": \"/bin/\",\n      \"command_type\": \"directory\",\n      \"rendered_command\": \"\"\n    }\n  ],\n  \"sub_env\": [],\n  \"updated_at\": \"2018-04-07T00:00:00Z\"\n}"
						}
					]
				},
				{
					"name": "Update a sudo Entitlement",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<regex>\",\n  \"add_env\": [\n    \"<regex>\",\n    \"<regex>\"\n  ],\n  \"description\": \"<string>\",\n  \"opt_no_exec\": \"<boolean>\",\n  \"opt_no_passwd\": \"<boolean>\",\n  \"opt_run_as\": \"<regex>\",\n  \"opt_set_env\": \"<boolean>\",\n  \"structured_commands\": [\n    {\n      \"args\": \"<regex>\",\n      \"args_type\": \"<regex>\",\n      \"command\": \"<regex>\",\n      \"command_type\": \"<string>\"\n    },\n    {\n      \"args\": \"<regex>\",\n      \"args_type\": \"<regex>\",\n      \"command\": \"<regex>\",\n      \"command_type\": \"<string>\"\n    }\n  ],\n  \"sub_env\": [\n    \"<regex>\",\n    \"<regex>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo",
								":sudo_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "sudo_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Sudo Entitlement"
								}
							]
						},
						"description": "Updates the specified sudo Entitlement\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"add_env\": [],\n  \"commands\": null,\n  \"created_at\": \"2018-04-07T00:00:00Z\",\n  \"description\": \"A new description\",\n  \"id\": \"226a1963-a1c8-4316-bb4d-da48f2e7652a\",\n  \"name\": \"name\",\n  \"opt_no_exec\": false,\n  \"opt_no_passwd\": true,\n  \"opt_run_as\": \"\",\n  \"opt_set_env\": false,\n  \"structured_commands\": [\n    {\n      \"args\": null,\n      \"args_type\": \"none\",\n      \"command\": \"/bin/ls\",\n      \"command_type\": \"executable\",\n      \"rendered_command\": \"\"\n    },\n    {\n      \"args\": null,\n      \"args_type\": null,\n      \"command\": \"/bin/\",\n      \"command_type\": \"directory\",\n      \"rendered_command\": \"\"\n    }\n  ],\n  \"sub_env\": [],\n  \"updated_at\": \"2018-04-07T00:00:00Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo",
										":sudo_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "sudo_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Sudo Entitlement"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a sudo Entitlement",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo",
								":sudo_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "sudo_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Sudo Entitlement"
								}
							]
						},
						"description": "Deletes the specified sudo Entitlement. You can't delete an Entitlement that is assigned to a Project.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo",
										":sudo_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "sudo_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Sudo Entitlement"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all sudo Entitlements for a Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name/entitlements/sudo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups",
								":group_name",
								"entitlements",
								"sudo"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "List all sudo Entitlements for a Group in a Project\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name/entitlements/sudo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups",
										":group_name",
										"entitlements",
										"sudo"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"2952722b-5aa8-4cb0-80d3-348d8484cc73\",\n      \"sudo_id\": \"5db14e13-3bee-4099-a105-c6e8aeeb7613\",\n      \"sudo_name\": \"eng_commands\",\n      \"name\": \"eng_commands\",\n      \"project_id\": \"72f5d809-c319-4c0a-a0b2-e4058088a491\",\n      \"group_id\": \"ab08ae51-0d71-44be-99d9-ea451bc9fee3\",\n      \"order\": 50,\n      \"created_at\": \"2024-03-01T19:48:25.083712Z\",\n      \"deleted_at\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Assign a sudo Entitlement to a Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"order\": 50,\n  \"sudo_id\": \"<regex>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name/entitlements/sudo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups",
								":group_name",
								"entitlements",
								"sudo"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Assigns a sudo Entitlement to a Group in a Project\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"order\": 50,\n  \"sudo_id\": \"5db14e13-3bee-4099-a105-c6e8aeeb7613\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name/entitlements/sudo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups",
										":group_name",
										"entitlements",
										"sudo"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove a sudo Entitlement from a Group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name/entitlements/sudo/:sudo_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups",
								":group_name",
								"entitlements",
								"sudo",
								":sudo_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								},
								{
									"key": "sudo_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Sudo Entitlement"
								}
							]
						},
						"description": "Removes the specified sudo Entitlement from a Group in a Project\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name/entitlements/sudo/:sudo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups",
										":group_name",
										"entitlements",
										"sudo",
										":sudo_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										},
										{
											"key": "sudo_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Sudo Entitlement"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Gateways",
			"item": [
				{
					"name": "List all Gateway Setup Tokens",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateway_setup_tokens"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all Gateway Setup Tokens for your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateway_setup_tokens"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"6116bb2a-7289-4528-92ee-8e92443c3b61\",\n      \"registration_type\": \"gateway-agent\",\n      \"description\": \"Example gateway setup token request\",\n      \"details\": null,\n      \"created_at\": \"0001-01-01T00:00:00Z\"\n    },\n    {\n      \"id\": \"a649a6b4-274b-43b7-a867-d93429068639\",\n      \"registration_type\": \"gateway-agent\",\n      \"description\": \"Example gateway setup token request 2\",\n      \"details\": null,\n      \"created_at\": \"0001-01-01T00:00:00Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Gateway Setup Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"labels\": {\n    \"dolore_56\": \"<string>\",\n    \"Excepteur_30d\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateway_setup_tokens"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Creates a Gateway Setup Token for your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"labels\": {\n    \"env\": \"dev\",\n    \"region\": \"us-west-2\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateway_setup_tokens"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created_at\": \"0001-01-01T00:00:00Z\",\n  \"description\": \"Example gateway setup token request\",\n  \"details\": null,\n  \"id\": \"6116bb2a-7289-4528-92ee-8e92443c3b61\",\n  \"registration_type\": \"gateway-agent\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a Gateway Setup Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens/:gateway_setup_token_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateway_setup_tokens",
								":gateway_setup_token_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "gateway_setup_token_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Gateway Setup Token"
								}
							]
						},
						"description": "Retrieves the specified Gateway Setup Token\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens/:gateway_setup_token_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateway_setup_tokens",
										":gateway_setup_token_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "gateway_setup_token_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Gateway Setup Token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created_at\": \"0001-01-01T00:00:00Z\",\n  \"description\": \"Example gateway setup token request\",\n  \"details\": null,\n  \"id\": \"6116bb2a-7289-4528-92ee-8e92443c3b61\",\n  \"registration_type\": \"gateway-agent\"\n}"
						}
					]
				},
				{
					"name": "Delete a Gateway Setup Token",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens/:gateway_setup_token_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateway_setup_tokens",
								":gateway_setup_token_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "gateway_setup_token_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Gateway Setup Token"
								}
							]
						},
						"description": "Deletes the specified Gateway Setup Token\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens/:gateway_setup_token_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateway_setup_tokens",
										":gateway_setup_token_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "gateway_setup_token_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Gateway Setup Token"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve a Gateway Setup Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens/:gateway_setup_token_id/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateway_setup_tokens",
								":gateway_setup_token_id",
								"token"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "gateway_setup_token_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Gateway Setup Token"
								}
							]
						},
						"description": "Retrieves the specified Gateway Setup Token\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateway_setup_tokens/:gateway_setup_token_id/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateway_setup_tokens",
										":gateway_setup_token_id",
										"token"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "gateway_setup_token_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Gateway Setup Token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created_at\": \"0001-01-01T00:00:00Z\",\n  \"description\": \"Example gateway setup token request\",\n  \"details\": null,\n  \"id\": \"6116bb2a-7289-4528-92ee-8e92443c3b61\",\n  \"registration_type\": \"gateway-agent\"\n}"
						}
					]
				},
				{
					"name": "List all Gateways",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateways?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&contains=<string>&status=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateways"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "If defined, results only include Gateways that include the specified value in their name"
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "If defined, results include all Gateway with the specified status. Possible status: 'ACTIVE'."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all Gateways for your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateways?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&contains=<string>&status=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateways"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"a2dfd474-2db4-4bb2-8364-d5f76ade396e\",\n      \"name\": \"Production gateway\",\n      \"access_address\": null,\n      \"default_address\": null,\n      \"description\": \"Gateway used for production env\",\n      \"cloud_provider\": null,\n      \"refuse_connections\": false,\n      \"labels\": null\n    },\n    {\n      \"id\": \"cf028ce5-1556-48dc-ab90-d15fe4fa7180\",\n      \"name\": \"Dev gateway\",\n      \"access_address\": null,\n      \"default_address\": null,\n      \"description\": \"Gateway used for dev env\",\n      \"cloud_provider\": null,\n      \"refuse_connections\": false,\n      \"labels\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Gateway",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateways/:gateway_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateways",
								":gateway_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "gateway_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Gateway"
								}
							]
						},
						"description": "Retrieves the properties of a specified Gateway\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateways/:gateway_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateways",
										":gateway_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "gateway_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Gateway"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_address\": null,\n  \"cloud_provider\": null,\n  \"default_address\": null,\n  \"description\": \"Gateway used for production env\",\n  \"id\": \"a2dfd474-2db4-4bb2-8364-d5f76ade396e\",\n  \"labels\": null,\n  \"name\": \"Production gateway\",\n  \"refuse_connections\": false\n}"
						}
					]
				},
				{
					"name": "Update a Gateway",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<regex>\",\n  \"labels\": {\n    \"occaecat_632\": \"<string>\",\n    \"do__f9\": \"<string>\",\n    \"Lorem_1\": \"<string>\"\n  },\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateways/:gateway_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateways",
								":gateway_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "gateway_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Gateway"
								}
							]
						},
						"description": "Updates a specified Gateway\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_address\": null,\n  \"cloud_provider\": null,\n  \"default_address\": null,\n  \"description\": \"New description for production gateway\",\n  \"id\": \"a2dfd474-2db4-4bb2-8364-d5f76ade396e\",\n  \"labels\": null,\n  \"name\": \"New name for production gateway\",\n  \"refuse_connections\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateways/:gateway_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateways",
										":gateway_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "gateway_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Gateway"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a Gateway",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateways/:gateway_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateways",
								":gateway_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "gateway_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Gateway"
								}
							]
						},
						"description": "Deletes the specified Gateway from your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateways/:gateway_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateways",
										":gateway_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "gateway_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Gateway"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve a status report for a Gateway",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/gateways/:gateway_id/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"gateways",
								":gateway_id",
								"status"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "gateway_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Gateway"
								}
							]
						},
						"description": "Retrieve a status report for the specified Gateway\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/gateways/:gateway_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"gateways",
										":gateway_id",
										"status"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "gateway_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Gateway"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"active_connections\": 2,\n  \"gateway_id\": \"7d6dbd30-d32f-4a7a-94d2-31e95747d460\",\n  \"status\": \"ONLINE\",\n  \"total_storage_bytes\": 4096,\n  \"updated_at\": \"0001-01-01T00:00:00Z\",\n  \"used_storage_bytes\": 2048\n}"
						}
					]
				}
			]
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "List all Groups for a Team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&contains=<string>&include_deleted=<boolean>&only_include_deleted=<boolean>&disconnected_mode_on_only=<boolean>&id=<string>&ignore=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "If defined, results only include Groups that use the specified value in their name"
								},
								{
									"key": "include_deleted",
									"value": "<boolean>",
									"description": "If 'true', results also include previously deleted Groups"
								},
								{
									"key": "only_include_deleted",
									"value": "<boolean>",
									"description": "If 'true', results only include previously deleted Groups"
								},
								{
									"key": "disconnected_mode_on_only",
									"value": "<boolean>",
									"description": "If 'true', results only include Groups that have enabled disconnected mode"
								},
								{
									"key": "id",
									"value": "<string>",
									"description": "If defined, results only include Groups with the specified IDs"
								},
								{
									"key": "ignore",
									"value": "<string>",
									"description": "If defined, results don't include Groups with the specified names. This is case sensitive."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all Groups for your Team\n\nThis endpoint requires one of the following roles: `access_admin`, `access_user`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&contains=<string>&include_deleted=<boolean>&only_include_deleted=<boolean>&disconnected_mode_on_only=<boolean>&id=<string>&ignore=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "include_deleted",
											"value": "<boolean>"
										},
										{
											"key": "only_include_deleted",
											"value": "<boolean>"
										},
										{
											"key": "disconnected_mode_on_only",
											"value": "<boolean>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "ignore",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"c3703a9d-cffa-4862-8037-f32fa1caecb0\",\n      \"name\": \"compsons\",\n      \"roles\": [\n        \"access_user\",\n        \"reporting_user\",\n        \"access_admin\"\n      ],\n      \"federated_from_team\": \"william-faulkner\",\n      \"federation_approved_at\": \"2018-04-07T00:00:00Z\",\n      \"deleted_at\": \"0001-01-01T00:00:00Z\"\n    },\n    {\n      \"id\": \"7f9901bd-7ca8-4653-af8e-ab5c2151236c\",\n      \"name\": \"compsons\",\n      \"roles\": [\n        \"access_user\",\n        \"reporting_user\",\n        \"access_admin\"\n      ],\n      \"federated_from_team\": null,\n      \"federation_approved_at\": null,\n      \"deleted_at\": \"0001-01-01T00:00:00Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"federated_from_team\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Creates a Group for your Team. Groups allow you to assign RBAC roles to users and manage user access to Projects.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deleted_at\": null,\n  \"federated_from_team\": null,\n  \"federation_approved_at\": null,\n  \"id\": \"\",\n  \"name\": \"compsons\",\n  \"roles\": [\n    \"access_user\",\n    \"reporting_user\",\n    \"access_admin\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_at\": \"0001-01-01T00:00:00Z\",\n  \"federated_from_team\": null,\n  \"federation_approved_at\": null,\n  \"id\": \"7f9901bd-7ca8-4653-af8e-ab5c2151236c\",\n  \"name\": \"compsons\",\n  \"roles\": [\n    \"access_user\",\n    \"reporting_user\",\n    \"access_admin\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Retrieves a specified Group\n\nThis endpoint requires one of the following roles: `access_admin`, `access_user`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_at\": \"0001-01-01T00:00:00Z\",\n  \"federated_from_team\": null,\n  \"federation_approved_at\": null,\n  \"id\": \"7f9901bd-7ca8-4653-af8e-ab5c2151236c\",\n  \"name\": \"compsons\",\n  \"roles\": [\n    \"access_user\",\n    \"reporting_user\",\n    \"access_admin\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Updates the access privileges of the specified Group\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roles\": [\n    \"access_user\",\n    \"reporting_user\",\n    \"access_admin\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove a Group from a Team",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Removes a Group from your Team. This also removes the Group from any associated Projects.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a Group",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/disconnected_mode",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"disconnected_mode"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Updates the access privileges of the specified Group\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roles\": [\n    \"access_user\",\n    \"reporting_user\",\n    \"access_admin\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/disconnected_mode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"disconnected_mode"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Users for a Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&user_type=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"users"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "starts_with",
									"value": "<string>",
									"description": "Includes ASA Users with a name that begins with the provided value"
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Includes ASA Users with the specified statuses. Valid statuses: 'ACTIVE', 'DISABLED', and 'DELETED'."
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "Includes ASA Users with name that contains the value"
								},
								{
									"key": "user_type",
									"value": "<string>",
									"description": "Includes ASA Users of the specified type. Valid types: 'human' and 'service'."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Lists all Users in a specified Group\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&user_type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"users"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "starts_with",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "user_type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"a32daca7-8dde-4492-bf71-210f7aa504d3\",\n      \"name\": \"Benjy.Compson\",\n      \"status\": \"DISABLED\",\n      \"details\": {\n        \"first_name\": \"Benjy\",\n        \"last_name\": \"Compson\",\n        \"full_name\": \"Benjy Compson\",\n        \"email\": \"benjy.compson@example.com\"\n      },\n      \"user_type\": \"human\",\n      \"deleted_at\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a User to a Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"<string>\",\n  \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"users"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Adds a User to a Group\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deleted_at\": null,\n  \"details\": {\n    \"email\": \"jason.compson@example.com\",\n    \"first_name\": \"Jason\",\n    \"full_name\": \"Jason Compson IV\",\n    \"last_name\": \"Compson\"\n  },\n  \"id\": \"6768ef2e-9a17-42ce-bf9a-a3a7242bd159\",\n  \"name\": \"Jason.Compson.IV\",\n  \"status\": \"ACTIVE\",\n  \"team_name\": \"william-faulkner\",\n  \"user_type\": \"human\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"users"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove a User from a Group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Removes a User from a Group\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "List all Projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&self=<boolean>&contains=<string>&traffic_forwarding=<boolean>&include_resource_count=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "self",
									"value": "<boolean>",
									"description": "If 'true', results only include Projects assigned to the current User"
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "If defined, results only include Projects that use the specified value in their name"
								},
								{
									"key": "traffic_forwarding",
									"value": "<boolean>",
									"description": "If 'true', results only include Projects that have traffic forwarding enabled"
								},
								{
									"key": "include_resource_count",
									"value": "<boolean>",
									"description": "If 'true', results also include the number of available resources for each project"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all Projects for your Team\n\nThis endpoint requires one of the following roles: `client`, `reporting_user`, `access_user`, `access_admin`, or `authenticated_client`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&self=<boolean>&contains=<string>&traffic_forwarding=<boolean>&include_resource_count=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "self",
											"value": "<boolean>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "traffic_forwarding",
											"value": "<boolean>"
										},
										{
											"key": "include_resource_count",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"name\": \"the-sound-and-the-fury\",\n      \"id\": \"435a700c-a6cb-4031-82bf-3674beaa9bc9\",\n      \"team\": \"william-faulkner\",\n      \"force_shared_ssh_users\": false,\n      \"shared_admin_user_name\": null,\n      \"shared_standard_user_name\": null,\n      \"create_server_users\": true,\n      \"require_preauth_for_creds\": true,\n      \"deleted_at\": \"0001-01-01T00:00:00Z\",\n      \"user_on_demand_period\": 0,\n      \"next_unix_uid\": 60001,\n      \"next_unix_gid\": 63001,\n      \"gateway_selector\": \"env in (dev,prod),region=us-west-2,release notin (canary,stable)\",\n      \"forward_traffic\": true,\n      \"ssh_session_recording\": true,\n      \"rdp_session_recording\": true\n    },\n    {\n      \"name\": \"the-sound-and-the-fury\",\n      \"id\": \"435a700c-a6cb-4031-82bf-3674beaa9bc9\",\n      \"team\": \"william-faulkner\",\n      \"force_shared_ssh_users\": false,\n      \"shared_admin_user_name\": null,\n      \"shared_standard_user_name\": null,\n      \"create_server_users\": true,\n      \"require_preauth_for_creds\": true,\n      \"deleted_at\": \"0001-01-01T00:00:00Z\",\n      \"user_on_demand_period\": 0,\n      \"next_unix_uid\": 60001,\n      \"next_unix_gid\": 63001,\n      \"gateway_selector\": \"env in (dev,prod),region=us-west-2,release notin (canary,stable)\",\n      \"forward_traffic\": true,\n      \"ssh_session_recording\": true,\n      \"rdp_session_recording\": true\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<regex>\",\n  \"create_server_users\": \"<boolean>\",\n  \"forward_traffic\": \"<boolean>\",\n  \"next_unix_gid\": \"<integer>\",\n  \"next_unix_uid\": \"<integer>\",\n  \"rdp_session_recording\": \"<boolean>\",\n  \"require_preauth_for_creds\": \"<boolean>\",\n  \"ssh_certificate_type\": \"<string>\",\n  \"ssh_session_recording\": \"<boolean>\",\n  \"user_on_demand_period\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Creates a Project for your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"create_server_users\": true,\n  \"deleted_at\": null,\n  \"force_shared_ssh_users\": false,\n  \"forward_traffic\": true,\n  \"gateway_selector\": null,\n  \"id\": \"\",\n  \"name\": \"the-sound-and-the-fury\",\n  \"next_unix_gid\": null,\n  \"next_unix_uid\": 0,\n  \"rdp_session_recording\": true,\n  \"require_preauth_for_creds\": true,\n  \"shared_admin_user_name\": null,\n  \"shared_standard_user_name\": null,\n  \"ssh_session_recording\": true,\n  \"team\": \"william-faulkner\",\n  \"user_on_demand_period\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"create_server_users\": true,\n  \"deleted_at\": \"0001-01-01T00:00:00Z\",\n  \"force_shared_ssh_users\": false,\n  \"forward_traffic\": true,\n  \"gateway_selector\": \"env in (dev,prod),region=us-west-2,release notin (canary,stable)\",\n  \"id\": \"435a700c-a6cb-4031-82bf-3674beaa9bc9\",\n  \"name\": \"the-sound-and-the-fury\",\n  \"next_unix_gid\": 63001,\n  \"next_unix_uid\": 60001,\n  \"rdp_session_recording\": true,\n  \"require_preauth_for_creds\": true,\n  \"shared_admin_user_name\": null,\n  \"shared_standard_user_name\": null,\n  \"ssh_session_recording\": true,\n  \"team\": \"william-faulkner\",\n  \"user_on_demand_period\": 0\n}"
						}
					]
				},
				{
					"name": "Retrieve a Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Retrieves the details of a Project\n\nThis endpoint requires one of the following roles: `access_admin`, `authenticated_client`, `client`, `reporting_user`, or `access_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"create_server_users\": true,\n  \"deleted_at\": \"0001-01-01T00:00:00Z\",\n  \"force_shared_ssh_users\": false,\n  \"forward_traffic\": true,\n  \"gateway_selector\": \"env in (dev,prod),region=us-west-2,release notin (canary,stable)\",\n  \"id\": \"435a700c-a6cb-4031-82bf-3674beaa9bc9\",\n  \"name\": \"the-sound-and-the-fury\",\n  \"next_unix_gid\": 63001,\n  \"next_unix_uid\": 60001,\n  \"rdp_session_recording\": true,\n  \"require_preauth_for_creds\": true,\n  \"shared_admin_user_name\": null,\n  \"shared_standard_user_name\": null,\n  \"ssh_session_recording\": true,\n  \"team\": \"william-faulkner\",\n  \"user_on_demand_period\": 0\n}"
						}
					]
				},
				{
					"name": "Updates the details of a Project",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"create_server_users\": \"<boolean>\",\n  \"forward_traffic\": \"<boolean>\",\n  \"next_unix_gid\": \"<integer>\",\n  \"next_unix_uid\": \"<integer>\",\n  \"rdp_session_recording\": \"<boolean>\",\n  \"require_preauth_for_creds\": \"<boolean>\",\n  \"ssh_certificate_type\": \"<string>\",\n  \"ssh_session_recording\": \"<boolean>\",\n  \"user_on_demand_period\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "This endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"create_server_users\": true,\n  \"forward_traffic\": null,\n  \"gateway_selector\": null,\n  \"next_unix_gid\": 63011,\n  \"next_unix_uid\": 60011,\n  \"rdp_session_recording\": null,\n  \"require_preauth_for_creds\": false,\n  \"shared_admin_user_name\": null,\n  \"shared_standard_user_name\": null,\n  \"ssh_session_recording\": null,\n  \"user_on_demand_period\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Deletes a specified Project\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Client Configuration Options",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"client_config_options"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Lists all Client Configuration Options for a specified Project\n\nThis endpoint requires one of the following roles: `access_user`, or `access_admin`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"client_config_options"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"ec74cb65-b413-4c02-a6f7-7d08dca1ff73\",\n      \"config_key\": \"ssh.insecure_forward_agent\",\n      \"config_value\": \"host\"\n    },\n    {\n      \"id\": \"e58b2748-83b4-4df4-8ef6-f194ed8b011c\",\n      \"config_key\": \"ssh.port_forward_method\",\n      \"config_value\": \"netcat\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a Client Configuration Option",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"config_key\": \"<string>\",\n  \"config_value\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"client_config_options"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Adds a Client Configuration Option to a Project. Use Client Configuration Options to automatically pass settings to any Client that accesses a Server within the Project.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config_key\": \"ssh.insecure_forward_agent\",\n  \"config_value\": \"host\",\n  \"id\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"client_config_options"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"config_key\": \"ssh.insecure_forward_agent\",\n  \"config_value\": \"host\",\n  \"id\": \"ec74cb65-b413-4c02-a6f7-7d08dca1ff73\"\n}"
						}
					]
				},
				{
					"name": "Delete a Client Configuration Option",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options/:client_config_options_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"client_config_options",
								":client_config_options_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "client_config_options_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Client Config Options"
								}
							]
						},
						"description": "Deletes a Client Configuration Option from a Project\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options/:client_config_options_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"client_config_options",
										":client_config_options_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "client_config_options_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Client Config Options"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Cloud Accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"cloud_accounts"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Lists all Cloud Accounts for a specified Project\n\nThis endpoint requires one of the following roles: `access_user`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"cloud_accounts"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"59c74d69-5d72-4c96-b051-f42df1aee388\",\n      \"project_name\": \"the-sound-and-the-fury\",\n      \"provider\": \"aws\",\n      \"account_id\": \"123456789012\",\n      \"description\": \"Dev AWS account\"\n    },\n    {\n      \"id\": \"b9617cbd-5e35-486c-8c57-a519c9b4f969\",\n      \"project_name\": \"the-sound-and-the-fury\",\n      \"provider\": \"gce\",\n      \"account_id\": \"630225935076\",\n      \"description\": \"Dev GCE account\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a Cloud Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"cloud_accounts"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Adds a Cloud Account to a specified Project. Servers created with this Cloud Account are automatically discovered and enrolled in the associated Project. Currently only Amazon Web Services (AWS) and Google Compute Engine (GCE) are supported.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"cloud_accounts"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"account_id\": \"123456789012\",\n  \"description\": \"Dev AWS account\",\n  \"id\": \"59c74d69-5d72-4c96-b051-f42df1aee388\",\n  \"project_name\": \"the-sound-and-the-fury\",\n  \"provider\": \"aws\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a Cloud Account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts/:cloud_account_uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"cloud_accounts",
								":cloud_account_uuid"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "cloud_account_uuid",
									"value": "<string>",
									"description": "(Required) The UUID of the Cloud Account"
								}
							]
						},
						"description": "Retrieves a Cloud Account for a Project\n\nThis endpoint requires one of the following roles: `access_user`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts/:cloud_account_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"cloud_accounts",
										":cloud_account_uuid"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "cloud_account_uuid",
											"value": "<string>",
											"description": "(Required) The UUID of the Cloud Account"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"account_id\": \"123456789012\",\n  \"description\": \"Dev AWS account\",\n  \"id\": \"59c74d69-5d72-4c96-b051-f42df1aee388\",\n  \"project_name\": \"the-sound-and-the-fury\",\n  \"provider\": \"aws\"\n}"
						}
					]
				},
				{
					"name": "Update a Cloud Account",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts/:cloud_account_uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"cloud_accounts",
								":cloud_account_uuid"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "cloud_account_uuid",
									"value": "<string>",
									"description": "(Required) The UUID of the Cloud Account"
								}
							]
						},
						"description": "Updates a Cloud Account for a Project\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts/:cloud_account_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"cloud_accounts",
										":cloud_account_uuid"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "cloud_account_uuid",
											"value": "<string>",
											"description": "(Required) The UUID of the Cloud Account"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"account_id\": \"123456789012\",\n  \"description\": \"Dev AWS account\",\n  \"id\": \"59c74d69-5d72-4c96-b051-f42df1aee388\",\n  \"project_name\": \"the-sound-and-the-fury\",\n  \"provider\": \"aws\"\n}"
						}
					]
				},
				{
					"name": "Remove a Cloud Account",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts/:cloud_account_uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"cloud_accounts",
								":cloud_account_uuid"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "cloud_account_uuid",
									"value": "<string>",
									"description": "(Required) The UUID of the Cloud Account"
								}
							]
						},
						"description": "Removes a Cloud Account from a Project\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts/:cloud_account_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"cloud_accounts",
										":cloud_account_uuid"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "cloud_account_uuid",
											"value": "<string>",
											"description": "(Required) The UUID of the Cloud Account"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve a Cloud Account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_provider/:cloud_provider/accounts/:cloud_account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"cloud_provider",
								":cloud_provider",
								"accounts",
								":cloud_account_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "cloud_provider",
									"value": "<string>",
									"description": "(Required) The provider of the Cloud Account. Must be one of 'aws', 'gcp', or 'azure'"
								},
								{
									"key": "cloud_account_id",
									"value": "<string>",
									"description": "(Required) The ID of the Cloud Account assigned by the cloud provider"
								}
							]
						},
						"description": "Retrieves a Cloud Account for a Project\n\nThis endpoint requires one of the following roles: `access_user`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_provider/:cloud_provider/accounts/:cloud_account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"cloud_provider",
										":cloud_provider",
										"accounts",
										":cloud_account_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "cloud_provider",
											"value": "<string>",
											"description": "(Required) The provider of the Cloud Account. Must be one of 'aws', 'gcp', or 'azure'"
										},
										{
											"key": "cloud_account_id",
											"value": "<string>",
											"description": "(Required) The ID of the Cloud Account assigned by the cloud provider"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"account_id\": \"123456789012\",\n  \"description\": \"Dev AWS account\",\n  \"id\": \"59c74d69-5d72-4c96-b051-f42df1aee388\",\n  \"project_name\": \"the-sound-and-the-fury\",\n  \"provider\": \"aws\"\n}"
						}
					]
				},
				{
					"name": "List all Groups in a Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Lists all Groups in a specified Project\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"\",\n      \"group\": \"compsons\",\n      \"project\": \"the-sound-and-the-fury\",\n      \"name\": \"compsons\",\n      \"group_id\": \"4cac827b-3050-4e76-abf8-01429a6c2536\",\n      \"server_access\": false,\n      \"server_admin\": true,\n      \"create_server_group\": true,\n      \"removed_at\": null,\n      \"deleted_at\": null,\n      \"unix_gid\": null,\n      \"server_group_name\": null,\n      \"profile_attributes\": {\n        \"unix_gid\": 63000,\n        \"unix_group_name\": \"sft_compsons\",\n        \"windows_group_name\": \"sft_compsons\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a Group to a Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"group\": \"<string>\",\n  \"server_access\": \"<boolean>\",\n  \"server_admin\": \"<boolean>\",\n  \"create_server_group\": \"<boolean>\",\n  \"server_group_name\": \"<string>\",\n  \"servers_selector\": \"<string>\",\n  \"unix_gid\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Adds a Group to a Project\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"create_server_group\": true,\n  \"deleted_at\": null,\n  \"group\": \"compsons\",\n  \"group_id\": \"\",\n  \"id\": \"\",\n  \"name\": \"compsons\",\n  \"removed_at\": null,\n  \"server_access\": true,\n  \"server_admin\": false,\n  \"server_group_name\": null,\n  \"unix_gid\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve a Group in a Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Retrieve the Project-level details for a specified Group\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"create_server_group\": true,\n  \"deleted_at\": null,\n  \"group\": \"compsons\",\n  \"group_id\": \"4cac827b-3050-4e76-abf8-01429a6c2536\",\n  \"id\": \"\",\n  \"name\": \"compsons\",\n  \"profile_attributes\": {\n    \"unix_gid\": 63000,\n    \"unix_group_name\": \"sft_compsons\",\n    \"windows_group_name\": \"sft_compsons\"\n  },\n  \"project\": \"the-sound-and-the-fury\",\n  \"removed_at\": null,\n  \"server_access\": false,\n  \"server_admin\": true,\n  \"server_group_name\": null,\n  \"unix_gid\": null\n}"
						}
					]
				},
				{
					"name": "Update a Group in a Project",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"group\": \"<string>\",\n  \"server_access\": \"<boolean>\",\n  \"server_admin\": \"<boolean>\",\n  \"create_server_group\": \"<boolean>\",\n  \"server_group_name\": \"<string>\",\n  \"servers_selector\": \"<string>\",\n  \"unix_gid\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Updates the Project-level details for a specified Group\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"create_server_group\": true,\n  \"deleted_at\": null,\n  \"group\": \"compsons\",\n  \"group_id\": \"\",\n  \"id\": \"\",\n  \"name\": \"compsons\",\n  \"removed_at\": null,\n  \"server_access\": false,\n  \"server_admin\": true,\n  \"server_group_name\": null,\n  \"unix_gid\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove a Group from a Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name"
								}
							]
						},
						"description": "Removes a Group from a Project. This doesn't delete the Group from the Team.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "group_name",
											"value": "<string>",
											"description": "(Required) The ASA Group name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve a Preauthorization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"preauthorizations"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Retrieves a Preauthorization for a specified project\n\nThis endpoint requires one of the following roles: `access_admin`, or `preauthorization`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"preauthorizations"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"disabled\": false,\n  \"expires_at\": \"2020-07-28T18:30:00Z\",\n  \"id\": \"566b0fa9-f3ef-4825-a390-16d1766764a0\",\n  \"projects\": [\n    \"the-sound-and-the-fury\"\n  ],\n  \"servers\": null,\n  \"user_name\": \"jason.compson\"\n}"
						}
					]
				},
				{
					"name": "Create a Preauthorization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_name\": \"<string>\",\n  \"expires_at\": \"<dateTime>\",\n  \"disabled\": \"<boolean>\",\n  \"projects\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"servers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"preauthorizations"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Creates a Preauthorization for a Project. A Preauthorization is a time-limited grant for a User to access resources in a specific Project.\n\nThis endpoint requires one of the following roles: `access_admin`, or `preauthorization`."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"disabled\": false,\n  \"expires_at\": \"2020-07-28T18:30:00Z\",\n  \"id\": \"\",\n  \"projects\": [\n    \"the-sound-and-the-fury\"\n  ],\n  \"servers\": null,\n  \"user_name\": \"jason.compson\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"preauthorizations"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Preauthorizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations/:authorization_id?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&include_expired=<boolean>&project=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"preauthorizations",
								":authorization_id"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "include_expired",
									"value": "<boolean>",
									"description": "If 'true', results include expired preauthorizations"
								},
								{
									"key": "project",
									"value": "<string>",
									"description": "If defined, results only include preauthorizations for the specified Project. This doesn't apply if used against a Project-specific endpoint."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "authorization_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Authorization"
								}
							]
						},
						"description": "Lists all Preauthorizations for a specified Project\n\nThis endpoint requires one of the following roles: `access_admin`, or `preauthorization`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations/:authorization_id?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&include_expired=<boolean>&project=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"preauthorizations",
										":authorization_id"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "include_expired",
											"value": "<boolean>"
										},
										{
											"key": "project",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "authorization_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Authorization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"566b0fa9-f3ef-4825-a390-16d1766764a0\",\n      \"user_name\": \"jason.compson\",\n      \"expires_at\": \"2020-07-28T18:30:00Z\",\n      \"disabled\": false,\n      \"servers\": null,\n      \"projects\": [\n        \"the-sound-and-the-fury\"\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a Preauthorization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_name\": \"<string>\",\n  \"expires_at\": \"<dateTime>\",\n  \"disabled\": \"<boolean>\",\n  \"projects\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"servers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations/:authorization_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"preauthorizations",
								":authorization_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "authorization_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Authorization"
								}
							]
						},
						"description": "Update a Preauthorization for a Project\n\nThis endpoint requires one of the following roles: `access_admin`, or `preauthorization`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"disabled\": true,\n  \"expires_at\": \"2020-07-28T18:30:00Z\",\n  \"id\": \"\",\n  \"projects\": [\n    \"the-sound-and-the-fury\"\n  ],\n  \"servers\": null,\n  \"user_name\": \"jason.compson\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"preauthorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "authorization_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Authorization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"disabled\": true,\n  \"expires_at\": \"2020-07-28T18:30:00Z\",\n  \"id\": \"566b0fa9-f3ef-4825-a390-16d1766764a0\",\n  \"projects\": [\n    \"the-sound-and-the-fury\"\n  ],\n  \"servers\": null,\n  \"user_name\": \"jason.compson\"\n}"
						}
					]
				},
				{
					"name": "List all Server Enrollment Tokens",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_enrollment_tokens"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Lists all Server Enrollment Tokens for a specified Project\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `server_enrollment_token_viewer`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_enrollment_tokens"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"0457d9fd-fba1-17f4-845d-f3bd28f8ac60\",\n      \"token\": {\n        \"laboris_6e\": \"si\",\n        \"culpa_6\": \"officia veniam nostrud\"\n      },\n      \"created_by_user\": \"Excepteur ut nulla voluptate\",\n      \"issued_at\": \"1956-08-06T08:35:13.643Z\",\n      \"description\": \"non minim ad occaeca\"\n    },\n    {\n      \"id\": \"ecc747a3-c11f-5afc-8649-f3569db82cb6\",\n      \"token\": {\n        \"proident1c\": \"dolore\"\n      },\n      \"created_by_user\": \"tempor ipsum adipisicing sit\",\n      \"issued_at\": \"1997-09-04T23:05:25.433Z\",\n      \"description\": \"dolore mollit laborum\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Server Enrollment Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_enrollment_tokens"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Creates a Server Enrollment Token for a specified Project. These tokens are used to enroll a Server in the Project.\n\nThis endpoint requires one of the following roles: `access_admin`, `server_enrollment_token_creator`, or `access_user`."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_enrollment_tokens"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": \"<string>\",\n  \"created_by_user\": \"mollit\",\n  \"id\": \"c035b9ec-2b1a-1a77-a9e6-04f708dd5de0\",\n  \"issued_at\": \"1954-07-03T05:10:50.033Z\",\n  \"token\": {\n    \"utf3\": \"labore ut\"\n  }\n}"
						}
					]
				},
				{
					"name": "Retrieve a Server Enrollment Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens/:server_enrollment_token_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_enrollment_tokens",
								":server_enrollment_token_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "server_enrollment_token_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server Enrollment Token"
								}
							]
						},
						"description": "Retrieves a Server Enrollment Token from a Project\n\nThis endpoint requires one of the following roles: `server_enrollment_token_viewer`, `access_user`, or `access_admin`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens/:server_enrollment_token_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_enrollment_tokens",
										":server_enrollment_token_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "server_enrollment_token_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Server Enrollment Token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": \"<string>\",\n  \"created_by_user\": \"mollit\",\n  \"id\": \"c035b9ec-2b1a-1a77-a9e6-04f708dd5de0\",\n  \"issued_at\": \"1954-07-03T05:10:50.033Z\",\n  \"token\": {\n    \"utf3\": \"labore ut\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a Server Enrollment Token",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens/:server_enrollment_token_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_enrollment_tokens",
								":server_enrollment_token_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "server_enrollment_token_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server Enrollment Token"
								}
							]
						},
						"description": "Deletes a Server Enrollment Token from a Project\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens/:server_enrollment_token_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_enrollment_tokens",
										":server_enrollment_token_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "server_enrollment_token_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Server Enrollment Token"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Server Users for a Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_users"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "List all Server Users for a specified Project. A Server User is a representation of a User that is created on an enrolled Server.\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "List of Server Users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_users"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"user_name\": \"benjycompson\",\n      \"server_user_name\": \"benjy\",\n      \"status\": \"ACTIVE\",\n      \"type\": \"human\",\n      \"unix_uid\": 60001,\n      \"unix_gid\": 63001,\n      \"admin\": true,\n      \"windows_server_user_name\": \"benjy\",\n      \"id\": \"220ed32b-72ae-456e-b2f7-1eccad4c6cab\"\n    },\n    {\n      \"user_name\": \"quentincompson\",\n      \"server_user_name\": \"quentin\",\n      \"status\": \"DELETED\",\n      \"type\": \"human\",\n      \"unix_uid\": 60002,\n      \"unix_gid\": 63002,\n      \"admin\": false,\n      \"windows_server_user_name\": \"quentin\",\n      \"id\": \"62564521-89cd-49fe-9618-20405b967dd0\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Server User for a Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Retrieves a Server User for a Project\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "Server User",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": {\n    \"user_name\": \"benjycompson\",\n    \"server_user_name\": \"benjy\",\n    \"status\": \"ACTIVE\",\n    \"type\": \"human\",\n    \"unix_uid\": 60001,\n    \"unix_gid\": 63001,\n    \"admin\": true,\n    \"windows_server_user_name\": \"benjy\",\n    \"id\": \"220ed32b-72ae-456e-b2f7-1eccad4c6cab\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all Servers in a Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Lists all Servers enrolled in a specified Project\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `server_admin`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"9963d86c-dd31-44ef-86a6-23ccaf859b35\",\n      \"hostname\": \"harvard\",\n      \"alt_names\": null,\n      \"bastion\": null,\n      \"canonical_name\": null,\n      \"access_address\": null,\n      \"os\": \"Ubuntu 16.04\",\n      \"os_type\": \"linux\",\n      \"services\": [\n        \"broker\",\n        \"ssh\"\n      ],\n      \"registered_at\": \"0001-01-01T00:00:00Z\",\n      \"last_seen\": \"0001-01-01T00:00:00Z\",\n      \"sftd_version\": \"1.44.4\",\n      \"cloud_provider\": null,\n      \"ssh_host_keys\": null,\n      \"broker_host_certs\": null,\n      \"instance_details\": null,\n      \"state\": \"INACTIVE\",\n      \"managed\": true,\n      \"deleted_at\": \"0001-01-01T00:00:00Z\",\n      \"instance_id\": null\n    },\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"6b5a4a5a-97c9-4905-8038-4fd4bf07dfe2\",\n      \"hostname\": \"jefferson\",\n      \"alt_names\": null,\n      \"bastion\": null,\n      \"canonical_name\": null,\n      \"access_address\": null,\n      \"os\": \"Ubuntu 16.04\",\n      \"os_type\": \"linux\",\n      \"services\": [\n        \"broker\",\n        \"ssh\"\n      ],\n      \"registered_at\": \"0001-01-01T00:00:00Z\",\n      \"last_seen\": \"0001-01-01T00:00:00Z\",\n      \"sftd_version\": \"1.44.4\",\n      \"cloud_provider\": null,\n      \"ssh_host_keys\": null,\n      \"broker_host_certs\": null,\n      \"instance_details\": null,\n      \"state\": \"INACTIVE\",\n      \"managed\": true,\n      \"deleted_at\": \"0001-01-01T00:00:00Z\",\n      \"instance_id\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add an Unmanaged Server to a Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hostname\": \"<string>\",\n  \"access_address\": \"<string>\",\n  \"alt_names\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								}
							]
						},
						"description": "Adds an unmanaged Server to a specified Project. Unmanaged Servers don't use Advanced Server Access for authentication, but still receive Client Configuration Options. Create an Unmanaged Server to control connection options such as port and agent forwarding for Users without requiring `sftd` to manage the Server.\n\nThis endpoint requires one of the following roles: `access_admin`, or `server_admin`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_address\": \"1.2.3.4\",\n  \"alt_names\": [\n    \"bastion\"\n  ],\n  \"credentialed\": false,\n  \"hostname\": \"bastion.dev.com\",\n  \"os_type\": \"\",\n  \"ssh_host_keys\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_address\": null,\n  \"alt_names\": null,\n  \"bastion\": null,\n  \"broker_host_certs\": null,\n  \"canonical_name\": null,\n  \"cloud_provider\": null,\n  \"deleted_at\": \"0001-01-01T00:00:00Z\",\n  \"hostname\": \"bastion.dev.com\",\n  \"id\": \"ccdda5bf-9a2f-45ee-a7e4-66a9700f8ab8\",\n  \"instance_details\": null,\n  \"instance_id\": null,\n  \"last_seen\": \"0001-01-01T00:00:00Z\",\n  \"managed\": false,\n  \"os\": \"\",\n  \"os_type\": null,\n  \"registered_at\": \"0001-01-01T00:00:00Z\",\n  \"services\": [],\n  \"sftd_version\": null,\n  \"ssh_host_keys\": null,\n  \"state\": \"ACTIVE\",\n  \"team_name\": \"william-faulkner\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a Server from a Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers",
								":server_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "server_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server"
								}
							]
						},
						"description": "Retrieves the details of a specified Server. This endpoint requires one of the following roles: `access_user`, `access_admin`, or `server_admin`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers",
										":server_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "server_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Server"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_address\": null,\n  \"alt_names\": null,\n  \"bastion\": null,\n  \"broker_host_certs\": null,\n  \"canonical_name\": null,\n  \"cloud_provider\": null,\n  \"deleted_at\": \"0001-01-01T00:00:00Z\",\n  \"hostname\": \"harvard\",\n  \"id\": \"9963d86c-dd31-44ef-86a6-23ccaf859b35\",\n  \"instance_details\": null,\n  \"instance_id\": null,\n  \"last_seen\": \"0001-01-01T00:00:00Z\",\n  \"managed\": true,\n  \"os\": \"Ubuntu 16.04\",\n  \"os_type\": \"linux\",\n  \"registered_at\": \"0001-01-01T00:00:00Z\",\n  \"services\": [\n    \"broker\",\n    \"ssh\"\n  ],\n  \"sftd_version\": \"1.44.4\",\n  \"ssh_host_keys\": null,\n  \"state\": \"INACTIVE\",\n  \"team_name\": \"william-faulkner\"\n}"
						}
					]
				},
				{
					"name": "Update a Server for a Project",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"labels\": {\n    \"quis_8c\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers",
								":server_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "server_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server"
								}
							]
						},
						"description": "Updates a Server for a specified Project. This operation is intended for use with the PolicySync feature, see [PolicySync: Attribute-Based Access Control](https://help.okta.com/okta_help.htm?type=asa&id=ext-asa-policysync).\n\nThis endpoint requires one of the following roles: `access_admin`, or `server_admin`."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"labels\": {\n    \"foo\": \"bar\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers",
										":server_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "server_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Server"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove a Server from a Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers",
								":server_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "server_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server"
								}
							]
						},
						"description": "Removes a Server from a specified Project\n\nThis endpoint requires one of the following roles: `access_admin`, or `server_admin`."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers",
										":server_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "server_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Server"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Service Users",
			"item": [
				{
					"name": "Issue a Service User token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_id\": \"<regex>\",\n  \"key_secret\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_token"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Requests a Service User token from the platform. Most API calls require an HTTP Authorization header with a value of `Bearer ${AUTH_TOKEN}`.\nTo retrieve an auth token, you need to [create a Service User and API key](https://help.okta.com/okta_help.htm?type=asa&id=ext_asa_service_users), then pass the API key information to this endpoint.\nAuth tokens may expire at any time, so code that uses them should be prepared to handle a 401 response code by creating a new auth token. By design, this operation does not require a authorization token."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key_id\": \"6052868b-1b04-4a14-8288-e6496d7f2f4b\",\n  \"key_secret\": \"uF0SoVBVQP/hJmQSLUZdM2a7ArYzjD8ykzvG7n4tKaOEfSErcwMUUDWpEf4Q42/HaVKPZUfILkzy/bsQFv7WRg==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_token"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"bearer_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImI4YTAzODA0MTM0NjctNGU5OC04ZDU2LTAxNDRlNGNkMGViMCIsInR5cCI6IkpXVCJ9.eyJleHAiOjE0NzY4MTE1OTAsImlzcyI6InNjYWxlZnQuYXV0aC50b2tlbiIsImp0aSI6IjA0YjRhNTE4LWU5YzYtNDc1My05YWY4LThlOTAwNjVjNjX5YSIsInJvbGVzIjp7IjE0NzY4MTE1OTAiOm51bGx9LCJ0ZWFtIjoic2NhbGVmdCIsInVzZXIiOiJyb2JvdF9ydXNzZWxsIn0.pHuv06Q1-sKjHrGXUzQi-uM7AAG3K1Q6rpuxycR2Py6QHwLrto1uZmZt4wrBo6tQRCl3RjHBKGcDmEfBZ6_gFnckpFMkIXUT3sIDmOvSACthgprcXjfYh0KarEDmDnIMsEPl7FVhl4N_I0yLK9O5XSS07AvAc-7RRD8udpo7inIDTRCCEvoJ16osgL1IzoDvc7ZPDj8-xhJ_kAsKc-vJ5WYKLAlCFx_fixayM43Apg2TySNE5nSeJFCa02F4ViZleY7K2l4h_p143DzVZjWEBeKmyQVRXhbZzL6HwONQckhgp_LHuSrP_sOtVc7BrFwmZq2NZtXEOWyQWfJ4Yp0qg8NzV2LhKLc4LncpQuagf8OA8jyEeQwbu3Rq9zp0y-FodMg64qfWcPSu53HiwYC9dvgw5zhXa8zuZRcPMO_orCPVYnmO761xAfsp-P8aJJZDqpxlzKA0s-ClRsgunC5C9Xq5snIq-f4hT45u8ldBfAr6dLkDO8BdPMTzufH52bTWX3iJ1ipW1YqMefJhPMzBHLwnJ3SYWN7WTEuRyoC6ndQ60PcEzsPJYAO5MxdY4WsnYOqv3aIryuTlwW3K0dNqcvBSirgxv5X7AvidO-JQLSXXrY134BxgyLBze7FwVYwH7ZhzBdX-DwsUwQsJ7R0mRWxpNnhGu7NjkbB0-QJs\",\n  \"expires_at\": \"2016-10-18T17:26:30Z\",\n  \"team_name\": \"scaleft\"\n}"
						}
					]
				},
				{
					"name": "List all Service Users for a Team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "starts_with",
									"value": "<string>",
									"description": "Includes ASA Users with name that begins with the value"
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Includes ASA Users with specified statuses. Valid statuses: 'ACTIVE', 'DISABLED', and 'DELETED'."
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "Includes ASA Users with name that contains the value"
								},
								{
									"key": "include_service_users",
									"value": "<string>",
									"description": "Include Service Users in the results"
								},
								{
									"key": "id",
									"value": "<string>",
									"description": "Include only users with the given IDs"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all Service Users for your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "starts_with",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "include_service_users",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"aa225c16-af6e-4ab4-9150-456fd472e2d7\",\n      \"name\": \"shreve\",\n      \"status\": \"ACTIVE\",\n      \"details\": null,\n      \"user_type\": \"service\",\n      \"deleted_at\": null\n    },\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"6b69de4e-90be-4016-9085-d54bf5815da1\",\n      \"name\": \"dilsey.gibson\",\n      \"status\": \"DISABLED\",\n      \"details\": null,\n      \"user_type\": \"service\",\n      \"deleted_at\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Service User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<regex>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Creates a Service User that can be used to automate interaction with the Advanced Server Access API\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"shreve\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_at\": null,\n  \"details\": null,\n  \"id\": \"aa225c16-af6e-4ab4-9150-456fd472e2d7\",\n  \"name\": \"shreve\",\n  \"status\": \"ACTIVE\",\n  \"team_name\": \"william-faulkner\",\n  \"user_type\": \"service\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a Service User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Retrieve a specified Service User\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_at\": null,\n  \"details\": null,\n  \"id\": \"6b69de4e-90be-4016-9085-d54bf5815da1\",\n  \"name\": \"dilsey.gibson\",\n  \"status\": \"ACTIVE\",\n  \"team_name\": \"william-faulkner\",\n  \"user_type\": \"service\"\n}"
						}
					]
				},
				{
					"name": "Update a Service User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"<string>\",\n  \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Updates a specified Service User\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deleted_at\": null,\n  \"details\": null,\n  \"id\": \"6b69de4e-90be-4016-9085-d54bf5815da1\",\n  \"name\": \"dilsey.gibson\",\n  \"status\": \"DISABLED\",\n  \"team_name\": \"william-faulkner\",\n  \"user_type\": \"service\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_at\": null,\n  \"details\": null,\n  \"id\": \"6b69de4e-90be-4016-9085-d54bf5815da1\",\n  \"name\": \"dilsey.gibson\",\n  \"status\": \"DISABLED\",\n  \"team_name\": \"william-faulkner\",\n  \"user_type\": \"service\"\n}"
						}
					]
				},
				{
					"name": "List all API keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name",
								"keys"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Lists all API keys for a specified Service User. This doesn't return the corresponding secret for each API key.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name",
										"keys"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"c6de9d40-1e6c-4033-88cb-992367d162eb\",\n      \"issued_at\": \"2020-04-07T02:00:00Z\",\n      \"expires_at\": \"0001-01-01T00:00:00Z\",\n      \"last_used\": null\n    },\n    {\n      \"id\": \"f37fadfc-fa03-4f46-a390-ce202772cff4\",\n      \"issued_at\": \"2020-04-07T00:00:00Z\",\n      \"expires_at\": \"2020-04-09T00:00:00Z\",\n      \"last_used\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Rotate all API keys",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name",
								"keys"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Rotates all API keys for a specified Service User. This also sets an expiration date for the existing API keys.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name",
										"keys"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"expires_at\": \"0001-01-01T00:00:00Z\",\n  \"id\": \"ba7ffbe9-c8e4-45c9-bc07-45729711c952\",\n  \"issued_at\": \"2020-04-07T00:00:00Z\",\n  \"last_used\": null,\n  \"secret\": \"NOvsvBg0g9mFXdHbLxEJcEFpu+LZjQSKsYezqMALq5WbGZTpUsxoS4vBqqHOO9O3xrhOq03B+oLf7bSTShbudw==\"\n}"
						}
					]
				},
				{
					"name": "Delete an API key",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys/:key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name",
								"keys",
								":key_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								},
								{
									"key": "key_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Service User key"
								}
							]
						},
						"description": "Deletes an API key for a Service User. The Service User can no longer authenticate with this API key.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										},
										{
											"key": "key_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Service User key"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Services",
			"item": [
				{
					"name": "List all Services for a Server",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers",
								":server_id",
								"services"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "server_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server"
								}
							]
						},
						"description": "Lists all Services available for a specified Server\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, `server_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers",
										":server_id",
										"services"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "server_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Server"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"6414fa11-289f-4aa0-b67e-dcef072af92e\",\n      \"service_user_id\": \"aa225c16-af6e-4ab4-9150-456fd472e2d7\",\n      \"service_user_name\": \"shreve\",\n      \"server_id\": \"5a3af768-063f-4a12-a056-8ef24e555556\",\n      \"server_uid\": \"9001\"\n    },\n    {\n      \"id\": \"99006ae2-db7e-4735-b6bc-c726e6ae81c3\",\n      \"service_user_id\": \"aa225c16-af6e-4ab4-9150-456fd472e2d7\",\n      \"service_user_name\": \"shreve\",\n      \"server_id\": \"5a3af768-063f-4a12-a056-8ef24e555556\",\n      \"server_uid\": \"9002\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"service_user_id\": \"<regex>\",\n  \"server_uid\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers",
								":server_id",
								"services"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "server_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server"
								}
							]
						},
						"description": "Creates a Service that allows Service Users to access the specified Server\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"server_uid\": \"9001\",\n  \"service_user_id\": \"aa225c16-af6e-4ab4-9150-456fd472e2d7\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers",
										":server_id",
										"services"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "server_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Server"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"6414fa11-289f-4aa0-b67e-dcef072af92e\",\n  \"server_id\": \"5a3af768-063f-4a12-a056-8ef24e555556\",\n  \"server_uid\": \"9001\",\n  \"service_user_id\": \"aa225c16-af6e-4ab4-9150-456fd472e2d7\"\n}"
						}
					]
				},
				{
					"name": "Delete a Service from a Server",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id/services/:service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers",
								":server_id",
								"services",
								":service_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name"
								},
								{
									"key": "server_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server"
								},
								{
									"key": "service_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Service"
								}
							]
						},
						"description": "Deletes a Service from a Server. This prevents Service Users from accessing the Server with the deleted Service.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers",
										":server_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "project_name",
											"value": "<string>",
											"description": "(Required) The Project name"
										},
										{
											"key": "server_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Server"
										},
										{
											"key": "service_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Service"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Services for a Team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"services"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all Services available for your Team\n\nThis endpoint requires one of the following roles: `reporting_user`, `access_user`, or `access_admin`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"services"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"6414fa11-289f-4aa0-b67e-dcef072af92e\",\n      \"service_user_id\": \"aa225c16-af6e-4ab4-9150-456fd472e2d7\",\n      \"service_user_name\": \"shreve\",\n      \"server_id\": \"5a3af768-063f-4a12-a056-8ef24e555556\",\n      \"server_uid\": \"9001\"\n    },\n    {\n      \"id\": \"99006ae2-db7e-4735-b6bc-c726e6ae81c3\",\n      \"service_user_id\": \"aa225c16-af6e-4ab4-9150-456fd472e2d7\",\n      \"service_user_name\": \"shreve\",\n      \"server_id\": \"5a3af768-063f-4a12-a056-8ef24e555556\",\n      \"server_uid\": \"9002\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/services/:service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"services",
								":service_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "service_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Service"
								}
							]
						},
						"description": "Retrieves the properties of a specified Service\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "service_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Service"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"6414fa11-289f-4aa0-b67e-dcef072af92e\",\n  \"server_id\": \"5a3af768-063f-4a12-a056-8ef24e555556\",\n  \"server_uid\": \"9001\",\n  \"service_user_id\": \"aa225c16-af6e-4ab4-9150-456fd472e2d7\"\n}"
						}
					]
				},
				{
					"name": "Delete a Service from a Team",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/services/:service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"services",
								":service_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "service_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Service"
								}
							]
						},
						"description": "Deletes a Service from your Team. This prevents Service Users from accessing the associated Server with the deleted Service.\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "service_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Service"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "List all Servers for a Team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/servers?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&project_name=<string>&hostname=<string>&bastion=<string>&canonical_name=<string>&cloud_provider=<string>&cloud_account=<string>&instance_id=<string>&alt_names_contains=<string>&state=<string>&selector=<string>&managed=<string>&AdServers=<string>&credentialed=<string>&has_account_under_management=<string>&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"servers"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "A Project name"
								},
								{
									"key": "hostname",
									"value": "<string>",
									"description": "A hostname"
								},
								{
									"key": "bastion",
									"value": "<string>",
									"description": "A bastion hostname"
								},
								{
									"key": "canonical_name",
									"value": "<string>",
									"description": "A canonical name"
								},
								{
									"key": "cloud_provider",
									"value": "<string>",
									"description": "A Cloud provider: 'aws' or 'gce'"
								},
								{
									"key": "cloud_account",
									"value": "<string>",
									"description": "The id of the cloud account associated with this server"
								},
								{
									"key": "instance_id",
									"value": "<string>",
									"description": "The instance ids of the servers"
								},
								{
									"key": "alt_names_contains",
									"value": "<string>",
									"description": "Include Servers that contain the value of 'alt_name_contains' in their 'alt_names'"
								},
								{
									"key": "state",
									"value": "<string>",
									"description": "State of the Server: 'ACTIVE' or 'INACTIVE'"
								},
								{
									"key": "selector",
									"value": "<string>",
									"description": "Server selectors. Syntax is selector=key1=value1,key2=value2"
								},
								{
									"key": "managed",
									"value": "<string>",
									"description": "If 'true', only include managed servers. If 'false', only include unmanaged servers"
								},
								{
									"key": "AdServers",
									"value": "<string>",
									"description": "If 'true', only include AD servers. If 'false', only include Non AD servers"
								},
								{
									"key": "credentialed",
									"value": "<string>",
									"description": "If 'true', only include unmanaged servers with credential issuance enabled. If 'false', only include unmanaged servers with credential issuance disabled."
								},
								{
									"key": "has_account_under_management",
									"value": "<string>",
									"description": "If 'true', only include servers that currently have at least one account's password under management'.  If 'false', only include servers that do not currently have an account whose password is under management"
								},
								{
									"key": "id",
									"value": "<string>",
									"description": "Include only servers with the given IDs. Only usable for PAM administrative views of servers, not end user server views."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all Servers in your Team. This only returns Servers available to the requesting User.\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, `authenticated_client`, `reporting_user`, or `server_admin`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/servers?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&project_name=<string>&hostname=<string>&bastion=<string>&canonical_name=<string>&cloud_provider=<string>&cloud_account=<string>&instance_id=<string>&alt_names_contains=<string>&state=<string>&selector=<string>&managed=<string>&AdServers=<string>&credentialed=<string>&has_account_under_management=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"servers"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "project_name",
											"value": "<string>"
										},
										{
											"key": "hostname",
											"value": "<string>"
										},
										{
											"key": "bastion",
											"value": "<string>"
										},
										{
											"key": "canonical_name",
											"value": "<string>"
										},
										{
											"key": "cloud_provider",
											"value": "<string>"
										},
										{
											"key": "cloud_account",
											"value": "<string>"
										},
										{
											"key": "instance_id",
											"value": "<string>"
										},
										{
											"key": "alt_names_contains",
											"value": "<string>"
										},
										{
											"key": "state",
											"value": "<string>"
										},
										{
											"key": "selector",
											"value": "<string>"
										},
										{
											"key": "managed",
											"value": "<string>"
										},
										{
											"key": "AdServers",
											"value": "<string>"
										},
										{
											"key": "credentialed",
											"value": "<string>"
										},
										{
											"key": "has_account_under_management",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"9963d86c-dd31-44ef-86a6-23ccaf859b35\",\n      \"hostname\": \"harvard\",\n      \"alt_names\": null,\n      \"bastion\": null,\n      \"canonical_name\": null,\n      \"access_address\": null,\n      \"os\": \"Ubuntu 16.04\",\n      \"os_type\": \"linux\",\n      \"services\": [\n        \"broker\",\n        \"ssh\"\n      ],\n      \"registered_at\": \"0001-01-01T00:00:00Z\",\n      \"last_seen\": \"0001-01-01T00:00:00Z\",\n      \"sftd_version\": \"1.44.4\",\n      \"cloud_provider\": null,\n      \"ssh_host_keys\": null,\n      \"broker_host_certs\": null,\n      \"instance_details\": null,\n      \"state\": \"INACTIVE\",\n      \"managed\": true,\n      \"deleted_at\": \"0001-01-01T00:00:00Z\",\n      \"instance_id\": null\n    },\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"6b5a4a5a-97c9-4905-8038-4fd4bf07dfe2\",\n      \"hostname\": \"jefferson\",\n      \"alt_names\": null,\n      \"bastion\": null,\n      \"canonical_name\": null,\n      \"access_address\": null,\n      \"os\": \"Ubuntu 16.04\",\n      \"os_type\": \"linux\",\n      \"services\": [\n        \"broker\",\n        \"ssh\"\n      ],\n      \"registered_at\": \"0001-01-01T00:00:00Z\",\n      \"last_seen\": \"0001-01-01T00:00:00Z\",\n      \"sftd_version\": \"1.44.4\",\n      \"cloud_provider\": null,\n      \"ssh_host_keys\": null,\n      \"broker_host_certs\": null,\n      \"instance_details\": null,\n      \"state\": \"INACTIVE\",\n      \"managed\": true,\n      \"deleted_at\": \"0001-01-01T00:00:00Z\",\n      \"instance_id\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a Server for a Team",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"labels\": {\n    \"quis_8c\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/servers/:server_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"servers",
								":server_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "server_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server"
								}
							]
						},
						"description": "Updates a Server for your Team. This is used by the PolicySync feature, see [PolicySync: Attribute-Based Access Control](https://help.okta.com/okta_help.htm?type=asa&id=ext-asa-policysync).\n\nThis endpoint requires one of the following roles: `access_admin`, or `server_admin`."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"labels\": {\n    \"foo\": \"bar\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/servers/:server_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"servers",
										":server_id"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "server_id",
											"value": "<string>",
											"description": "(Required) The UUID of the Server"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve settings for a Team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"settings"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Retrieves Team-level settings for your Team\n\nThis endpoint requires one of the following roles: `access_admin`, `instance_admin`, or `access_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"settings"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"approve_device_without_interaction\": false,\n  \"client_session_duration\": 36000,\n  \"post_device_enrollment_url\": null,\n  \"post_login_url\": null,\n  \"post_logout_url\": null,\n  \"reactivate_users_via_idp\": false,\n  \"team\": \"william-faulkner\",\n  \"user_provisioning_exact_username\": null,\n  \"web_session_duration\": 36000\n}"
						}
					]
				},
				{
					"name": "Update settings for a Team",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"approve_device_without_interaction\": \"<boolean>\",\n  \"client_session_duration\": \"<integer>\",\n  \"post_device_enrollment_url\": \"<string>\",\n  \"post_login_url\": \"<string>\",\n  \"post_logout_url\": \"<string>\",\n  \"reactivate_users_via_idp\": \"<boolean>\",\n  \"user_provisioning_exact_username\": \"<boolean>\",\n  \"web_session_duration\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"settings"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Updates Team-level settings for your Team. Partial updates are permitted. To disable a setting, set the value to `null`.\n\nThis endpoint requires one of the following roles: `access_admin`, or `instance_admin`."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approve_device_without_interaction\": false,\n  \"client_session_duration\": 600,\n  \"post_device_enrollment_url\": null,\n  \"post_login_url\": null,\n  \"post_logout_url\": null,\n  \"reactivate_users_via_idp\": false,\n  \"team\": \"william-faulkner\",\n  \"user_provisioning_exact_username\": null,\n  \"web_session_duration\": 600\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"settings"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve statistics for a Team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/team_stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"team_stats"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Retrieves statistics about your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/team_stats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"team_stats"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"num_af_applications\": 0,\n  \"num_clients\": 0,\n  \"num_gateways\": 0,\n  \"num_groups\": 1,\n  \"num_human_users\": 1,\n  \"num_oidc_applications\": 0,\n  \"num_projects\": 2,\n  \"num_servers\": 1,\n  \"num_service_users\": 0\n}"
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Retrieve information about the current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/current_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"current_user"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Retrieves information about the User that is invoking the API"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/current_user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"current_user"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"305b1bd8-b783-4351-a2b6-204248c9ea46\",\n  \"name\": \"Jason.Compson.IV\",\n  \"team_name\": \"william-faulkner\"\n}"
						}
					]
				},
				{
					"name": "List all Users for a Team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "starts_with",
									"value": "<string>",
									"description": "Includes ASA Users with name that begins with the value"
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Includes ASA Users with specified statuses. Valid statuses: 'ACTIVE', 'DISABLED', and 'DELETED'."
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "Includes ASA Users with name that contains the value"
								},
								{
									"key": "include_service_users",
									"value": "<string>",
									"description": "Include Service Users in the results"
								},
								{
									"key": "id",
									"value": "<string>",
									"description": "Include only users with the given IDs"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								}
							]
						},
						"description": "Lists all Users for your Team\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "starts_with",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "include_service_users",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"6768ef2e-9a17-42ce-bf9a-a3a7242bd159\",\n      \"name\": \"Jason.Compson.IV\",\n      \"status\": \"ACTIVE\",\n      \"details\": {\n        \"first_name\": \"Jason\",\n        \"last_name\": \"Compson\",\n        \"full_name\": \"Jason Compson IV\",\n        \"email\": \"jason.compson@example.com\"\n      },\n      \"user_type\": \"human\",\n      \"deleted_at\": null\n    },\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"a32daca7-8dde-4492-bf71-210f7aa504d3\",\n      \"name\": \"Benjy.Compson\",\n      \"status\": \"DISABLED\",\n      \"details\": {\n        \"first_name\": \"Benjy\",\n        \"last_name\": \"Compson\",\n        \"full_name\": \"Benjy Compson\",\n        \"email\": \"benjy.compson@example.com\"\n      },\n      \"user_type\": \"human\",\n      \"deleted_at\": null\n    },\n    {\n      \"team_name\": \"william-faulkner\",\n      \"id\": \"5d61bb6c-04d6-4c4c-af86-08b4cf462815\",\n      \"name\": \"Quentin.Compson.III\",\n      \"status\": \"DELETED\",\n      \"details\": {\n        \"first_name\": \"Quentin\",\n        \"last_name\": \"Compson\",\n        \"full_name\": \"Quentin Compson III\",\n        \"email\": \"quentin.compson@example.com\"\n      },\n      \"user_type\": \"human\",\n      \"deleted_at\": \"1910-06-10T00:00:00Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Retrieves a User from your Team\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_at\": null,\n  \"details\": {\n    \"email\": \"jason.compson@example.com\",\n    \"first_name\": \"Jason\",\n    \"full_name\": \"Jason Compson IV\",\n    \"last_name\": \"Compson\"\n  },\n  \"id\": \"6768ef2e-9a17-42ce-bf9a-a3a7242bd159\",\n  \"name\": \"Jason.Compson.IV\",\n  \"status\": \"ACTIVE\",\n  \"team_name\": \"william-faulkner\",\n  \"user_type\": \"human\"\n}"
						}
					]
				},
				{
					"name": "Update a User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"status\": \"<string>\",\n  \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Updates a User from your Team\n\nThis endpoint requires the `access_admin` role."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deleted_at\": null,\n  \"details\": {\n    \"email\": \"James.compson@example.com\",\n    \"first_name\": \"James\",\n    \"full_name\": \"James Compson IV\",\n    \"last_name\": \"Compson\"\n  },\n  \"id\": \"6768ef2e-9a17-42ce-bf9a-a3a7242bd159\",\n  \"name\": \"James.Compson.IV\",\n  \"status\": \"ACTIVE\",\n  \"team_name\": \"william-faulkner\",\n  \"user_type\": \"human\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Groups for a User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/groups?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&contains=<string>&include_deleted=<boolean>&only_include_deleted=<boolean>&disconnected_mode_on_only=<boolean>&id=<string>&ignore=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name",
								"groups"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The UUID of an object used as an offset for pagination"
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Controls the number of objects listed per page"
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "If 'true', the most recent results are listed first"
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "Controls the direction of paging"
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "If defined, results only include Groups that use the specified value in their name"
								},
								{
									"key": "include_deleted",
									"value": "<boolean>",
									"description": "If 'true', results also include previously deleted Groups"
								},
								{
									"key": "only_include_deleted",
									"value": "<boolean>",
									"description": "If 'true', results only include previously deleted Groups"
								},
								{
									"key": "disconnected_mode_on_only",
									"value": "<boolean>",
									"description": "If 'true', results only include Groups that have enabled disconnected mode"
								},
								{
									"key": "id",
									"value": "<string>",
									"description": "If defined, results only include Groups with the specified IDs"
								},
								{
									"key": "ignore",
									"value": "<string>",
									"description": "If defined, results don't include Groups with the specified names. This is case sensitive."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team"
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username"
								}
							]
						},
						"description": "Lists all Groups for a specified User\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, or `reporting_user`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/groups?offset=<string>&count=<integer>&descending=<boolean>&prev=<boolean>&contains=<string>&include_deleted=<boolean>&only_include_deleted=<boolean>&disconnected_mode_on_only=<boolean>&id=<string>&ignore=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name",
										"groups"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "include_deleted",
											"value": "<boolean>"
										},
										{
											"key": "only_include_deleted",
											"value": "<boolean>"
										},
										{
											"key": "disconnected_mode_on_only",
											"value": "<boolean>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "ignore",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name",
											"value": "<string>",
											"description": "(Required) The name of your Team"
										},
										{
											"key": "user_name",
											"value": "<string>",
											"description": "(Required) The relevant username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "cillum",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"list\": [\n    {\n      \"id\": \"7f9901bd-7ca8-4653-af8e-ab5c2151236c\",\n      \"name\": \"compsons\",\n      \"roles\": [\n        \"access_user\",\n        \"reporting_user\",\n        \"access_admin\"\n      ],\n      \"federated_from_team\": null,\n      \"federation_approved_at\": null,\n      \"deleted_at\": \"0001-01-01T00:00:00Z\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://app.scaleft.com"
		}
	]
}